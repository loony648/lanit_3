<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="UC-0 CSV Data Set Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="filename">C:/Users/mrswi/OneDrive/Documents/UCQueries.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames"></stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="UC-0 Rambler" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="UC-0/sync2.204-150" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/sync2.204-150" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="anket_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">anket_id</stringProp>
                  <stringProp name="Argument.value">3396%3A622</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">85</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ruid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ruid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1eIZSZuAQYXhAA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">profile.ssp.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sync2.204</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/context.jsp-149" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="wl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">wl</stringProp>
                  <stringProp name="Argument.value">rambler</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="json" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">json</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pad_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pad_id</stringProp>
                  <stringProp name="Argument.value">432151618</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="block_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block_id</stringProp>
                  <stringProp name="Argument.value">455984306</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screenw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screenw</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screenh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screenh</stringProp>
                  <stringProp name="Argument.value">1080</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="winw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">winw</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="winh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">winh</stringProp>
                  <stringProp name="Argument.value">979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rq</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rq_sess" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rq_sess</stringProp>
                  <stringProp name="Argument.value">8119a067-62e7-4e4b-ae82-3d9c931d19ac</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="secure" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">secure</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vcapirs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vcapirs</stringProp>
                  <stringProp name="Argument.value">8_1_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jparams" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jparams</stringProp>
                  <stringProp name="Argument.value">%7B%22puid6%22%3A%22HEAD_MAIN%22%2C%22puid61%22%3A%22804%22%2C%22puid29%22%3A%221%22%2C%22puid30%22%3A%22clear-night%22%2C%22pageNumber%22%3A%221%22%2C%22puid42%22%3A%226.05%22%2C%22pli%22%3A%22a%22%2C%22plp%22%3A%22a%22%2C%22pop%22%3A%22a%22%7D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="misc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">misc</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rq_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rq_type</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grab</stringProp>
                  <stringProp name="Argument.value">eyJncmFiX3ZlcnNpb24iOiA0fQp4nJ1a244c1RV95yvqA2wcDFGEZfkB8sIDCk_w7MRWsARYCn5I3vri8dgZ47HxECLj24AJSCiipqZ7urqrqlvyF1T9gr8ke621T1Wd6nEURQi72111Lnuvvfba-5yLn974_LNLb1z89OrlK5cu3rh247Orl-rndVqX9VFd1PNmdK6u6nWd1etm3Ezq_ExSb-zzrn1OkzrntzpvxvUqeTU6SOy9eT2r83pZV81evdTTIzxdFxeSeKzEZsLHsT2fc7DShhrV6Zmk-Qqz16tmYt_X9lpVp81-b26toz62_2d8wV6rFzY2X7OHJ_Z30dzlMuYcfGXPlnXZTG2wnM_csr85OJ-xddh-bQjbTrP3ZlI_iRaLn32-Ckvxf1k2uzbS-OI5Ge_iOZryjYt_vH7lbzDs25fqb-qMu9hgIRv7aCbinytbrS1sZvPetFltOc0ksckwbcpXMpunXpy1nZm14ZG1vZTrJ3xK6sNm2nxlr65kDWwzhbXs2dQW87av4blNd2T_wwErrLygNewxGRKmgynMvDIPfJVitMxWBwvY2m01z-zbhHY6solHNuW8N8sP9vY8mDzsdBo-2bDc77o-SmgOsxunlIFf_oJNuL9T-mFkc_ARbg3P2dDm75dFNClewX6OOXbz92Yfb2NrmMqwtLFvZmXgK2C2kHMB0dxWfJNou6XfswiZ3VS_O__OWbwAFBR8DCgaGcpgENuyucmszJmf0nC7cFJd8dkn9Y_1d711H2B7WPOGXl0jZrSghzCtTIkfLsA0T-WPiv9I63BHBf4xI3R3kvqE1r-DKSMTPbI3MIMt0dwGn9hD876TxsTNwsybETvD4Fxw1pKz53SDvyyHrfpmqr_2l-nPsb2FP-f0uUN3TugUCqI1vXbHx7bQgqt9LgtLWGnl3poRK1kf2p9c_vLTa1_8-cb1L5KPrn95w0jmAUOf7DMDyp0c-OcRqMF3aUiGZYXDlqcS_iYsVE4SeWTNB_b7ktavmmlrQiLqJGAcPl2K5Oi3E2wZS2_2CIYsGIOWsVUc2hiyS4A7lzShcVOS6_loFc_MibdlmNfEmpFD_XN9H_Z8-YvYDVCFL5u9ZudlATODLLjZZh8IegTvgmsj7hDRLgRlwRXGgQG5yjE-wJ8pN2jb2fZ_HLTPyDRz0LGMMYOVYNkCVjPbjTtKA81tm6ck9uZwcyX6NsiYSfLgXFtWfxtPbAYQn9ltp5leSOzRtc1ui31MBKywRA5bH9szE4Xzyoy2Z2Pd7TEx6TOnb8RLIBiNkNibTAj2q9KM-WcYiXhoxz6caK0afeEwCQEMAFle2-U0R4BNpRg6YvBXAWlZgrFslSPugmEDio4dqEg2Yqy4SjpxpiyRMAImek9wpV2PmQgnHBf4uKfsXvINQBeUlhItt5vp1h6BBGDC5pwZtibKc8qkwCmdWXIZc2btZQTuEaN9Sgmwd4bZG5aAN-Bs2PgOc1LIy2FPM49-GPZeM-kTrpCKyT0qH7nRLI6xvQ1i2IZNbea7iS9xLgjI2F0y1mRr0kreqY02dj0MS-65R1cGt59cfkzowjVAlwuGczp79hJSCTjdJZzBgS0XKzDyTq_kjJm91idI6lVz18w-xN5P9TNyzzdBIPHtqsvkF_izOAy8KfpsmR67t3Xcxl4RtAvaJUPkQ3ulcQb4Grjg-MfclbjcI5TMP-WGGElm7j4XkUG5adgo-7_48RFXV54qCTxa5_EsRBuSBATBLcx3mvoCOPZcQ9gba4-RdZyVnHqjDftkXEnYco5BaPY1GUPmrZyOmzEY-Un9PBo4ZdgUol9bYGLIEduCfJFQk7feeRcIugcgQ_VABK18pXPKacqpfcUk529jQcyAB6OA3A80VbmYyAZRWcooGTMMRsXqlSXvEiKla6vUo6OIZngEjLBQWMEfTPvaoTPfgosCa7bsboDFw-uk5dpjJZKqU2O0lEY6XV4axIfmlbwpqMnnjOFRULVh_9REayZafE2jOMPy9oIk1PPp4PkziYuOMSm9CrSm9Et07JoFThjqWJGSzhZHskgaiDWz8X37kXYUzCuvjtKgueKZy5bPWAB5RjrmM5ue7FqLEgqkDfiit5rHpKG72IEXD4EoOABh6ehaQoWOWqhXEqYIASwWLJCc_20SAK6lW9S9Gv2rN99TEtitpH5BAu6Fc86IH2nyyhEJDII2lyCuitQsLJwIOq8rYrSPodESrwvHxKvmKDr9uqHy51cjlYSfC19IDJUnetLlAkvc3PjSTPtmMtBI4O3DwDv3VGZg_O3UsIRcelY_7OZ5OyF33mH9HmfSvuRwXgtJlfOWihNsX3nQ8yoJK2E5fTJI3i3zbiljsVxPUtkTRkIlETCsBPhPATcYpqLYC5pEUOpN-6PHdq7oPD3Y0wuwcGgDhLKx7R7MbTWFNn3TU0VKVvIUb3s3kbxKvCDJIVF6S7jvXJF7FU6Arl0dotaG5sTrsN2W53rSodU-XvfYD71pvncWt6nA_bnybN-AsnViltqne5TPZUs6f5-GygEyQ5ObfNWfxXLurwlNzTrIFnQrEIMi0xXERnYZ5l7yZoGn6XIP4gKsLXmZUmB64tS41GQK3rSHAshMcZcrrCVdgAJoQthOIx5S9bPy0qtHe8wgd5h7pw7fmcih2x7pk7U16iriIo5YNEDGXnYpY4ba2ZspUmG9GrKZ9oNOyxdPUZHQIt1m4qmCBZ5y78dY3QMDxqJtXpiXMtURkLAo6cKaylZ5rJUK-w56avyxoFVRNd4WBLEO5LzdkBOOuOCgz0uARa_YPg9cHGdeU7j-XrmKyCURGWBop5HAFv59wqWbdRBwPYX-3uUr71___OqVa5e_ONW2PV3dNvg8M5mNDtjZ2I-w8M_6QCUTnUadm4rxgjRzE2N3Tzz9sfRpZYeHoyDYlmqqWU-L4WXoNG5IAXncGeG2dsXbacupRegmrrgqyTr0KuK8QsieqEfa9hVy5qJhwZfS2EdkrN02zS771e78ZRGAOAuCShN3bZ67gxr6fqt2vd_Wi7DXayPncenWZZC9bSwjRlCVsQMa55IPL__12ueh5dDhwBNvpvJIC1-oXZmyt0q2uymoJcaX4lIqO_o8i3OHWeUhh5ezS5ZkNBLIcVdo9nLQGxoTcO9KmlU0weYRNO8PXRkxSFGdtFj2SnDW8KiJZ-7UXwFVSteM4Zh6lwVY6DcYCIpsoItsD1M63psPypSB1eYSyzQnKSdlZG6oJGdcMoXUM2_TTbzVo2b_D-h8xfWsU8ka5tCGDxF3F2D-3GHH0moWCE9kCBzdI6cE5otGfaCkpayt1kXP76S1NKEEzhkn6hqtQOxocy8S73YvtkY-8C4EW12jViZkHlKhByqNU3agnTgNijKnzR31DB5SVoAHpxF1qywNFdlGKYid3C2kbVQdB7HDxhE1CIV2Tqk9C2Y8gnTaUpEhCCt1ANQeKnspcy6wit7nrZy3YEjZ28sIA6_W8KFQTAWZnKGjsFWFUrB2lJ_pH_pNLMFL5zqUeBUUFvF7V0cdG8qJcTsnrAEI25d-sX_kmmc2cGauWkIgnrfCaCzdNe93r7gaL-r6QUktvWxuGXg-_uCjs16DjtX-Ckz74dW__Onqlatfcj9tvR3KzBlnOpGXY33vhz-d0Iyz2hmRFs9kNqSNrGNe0gmLauetKqTmWT83IH1FhSG6Py3LaMJUiaPj4UKdKWDq2Cuh9jQoVL6hoqB0zNgBKgHhI8-_S_Wu5DO9braKCclT3iBV4MvGe6irM22Hnj3tlII07ziSCpYUwuMpBF7ca2KVT6Rz3Whm4ARFHVn23sfeKVozhkLtpG7gzFumxh5n3QehdE7DD_-lj2yTjbscfUgBuxtc2hPkrPl3lZHmQQRuHRx0DRMJ1tiYB4qR5_UL7KM7BMpDu5WFAzFaKUmw1RpwkkfJyVXZAennyHEyj7Li1-FkCTE1bY8_9_BPC6KecUyT0s-qDD2TpOHcJioOet3o02yQJt5JmHi3T43SDNvqH3ayOm0POyMPvXB4zsnqnjQ4Mlbl5YCfDfW6-jt6yvtwfkQdDrSHzdTn9XbZ7d2AFQszh1xhXyvSmcczMr1NhUOGkUv5kn6INueSnaQa9-FguB1mBUqQoEp2KViKvlTJulO6vK_NUi5KZzqFC75hiTMKZB6xd1t5p0EE40zpdvDb1sEZWHf9-s5bGrFwh8u2jRG4aNIJThesZrkyos_QHIaaQAbzJsSgQ7XSKlQKdi3hsMf2SJh_Sf9XXQmeEIkbASn0hU89Ka6_dbXQ34z7wRnw2GuRGRtebLZNXPEF9te2fCVRXB62nmjvLugwLPP1puKjKPC-J3K8XyVyBCQB2qWUg-vZrgfrYxWubFnfecenLZu-4_ls6vkp6iE4lKS3F-oNAoEd9DMBKRyFOi-HzS10I2LXR1n0rB2lgEdKnOyYrtSj3FA4TkI8qKe92542Ovdto-SF1yblKadOjFL-9xyCxM-Ewm2TY7rA9VWogrzXrW4GJl31qplYMgYd_JrSl8lkEQpRtlfWysb33d_HrVKErHz5i7HJTb_YgOsb9tWz-YCQ21bqPwKihl1V29kOCcGpVOisungp28MeLzKJE5giee_DTwZ3EU6hguGdi47XwmmTT0fRbZsaWu-gFY9IysqiyjCDoyRSbxHutITu1oWWRpjglOGxBB6Mh15B6scarlamUW5-6zcJW9o51chq-8iyvXOjJHkiUgZXZR49urDgcO-zyb-hRwdHy-hXwdIHGvTs-X7zp0WOd9RU18-UEQetk1T5PfUD8VhZ-R0oNsoCNUdtcXVXbHA__netUQVceG9bxVJIA4UKpq52QD29d6pGuHfqkbdXCSqF_HzjpM-cTFHhwHOQWbsbUvN4s-2ZXerGKjQjRY7tpeq3-NfhuEuSKzq-XMaYe02OOKSoVfPuNrhZp2PNKNxT6l1FmHGEkd_PWqurGtULvueNJ52YIKMzjSfGGIe4FzI8FaJvVgnbX0edrmwP2L3ZpC-c7Vu1eQcHea59U938UL-5f0ROsdo7B6295-t9zTR0_9VpwlXEwZmJ59KuWTkXJ_CyQOItn4Zn2nSaaYNtMq86cVRxfWsY_6ba6f3G9GDukrTgSf2E8whNue7B-HkzD7tyKpSFN-FKneHEjsT68MqOy-ZSp90bpgNdxft4oJ_bxiHZSG2tTi75BR_JmBxNpZJvFMPzOkIycKpucqiDUoULDoM6EAjt6ZTuptMsQDycV5SRWvmZF21ejZ52N21ejR63bBVOPYM9KK9gCp8p2v1jEsGCXb7U65xOVPWijiVp1zb0uF2der1LKvX9P3z8we_PvvXu_9Dc4l2NEY8rCwfwFkXFx8d5dH2k33wOdNJecmjvNVg9Gt9peOgNeUrYaOPSr3L78KQy0sXf4ToBs-KBPmXdsVA6bCbe90y5j25ZSi3hZXboLQ5bOrREFZrsIQ14aycPhZXkne5YRKK5125CdN73W8Di1pn63o952-l2kKVTJfxw1qFVdPK84tPTnrFNFE37TF1SVx1H0fF97Vcry-6mjK78moXDMVUYuyveM12YTXnVT0XToF3kc5zz68HndP_6P24ChMw%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="browser_family" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">browser_family</stringProp>
                  <stringProp name="Argument.value">Edge</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="browser_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">browser_version</stringProp>
                  <stringProp name="Argument.value">89.0.774.57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="os_family" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">os_family</stringProp>
                  <stringProp name="Argument.value">Windows</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="os_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">os_version</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="device_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">device_type</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="top" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">top</stringProp>
                  <stringProp name="Argument.value">1445</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="left" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">left</stringProp>
                  <stringProp name="Argument.value">648</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fpruid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fpruid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1eIZSZuAQYXhAA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lruid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lruid</stringProp>
                  <stringProp name="Argument.value">pQ8AALraYGCbEmwWAQE%2BegA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">Begun_Autocontext_saveFeed2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fwww.rambler.ru%2F</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ssp.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/context.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/context.jsp-148" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="wl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">wl</stringProp>
                  <stringProp name="Argument.value">rambler</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="json" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">json</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pad_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pad_id</stringProp>
                  <stringProp name="Argument.value">432151618</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="first" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">first</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block_id</stringProp>
                  <stringProp name="Argument.value">468710618</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="screenw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screenw</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="screenh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screenh</stringProp>
                  <stringProp name="Argument.value">1080</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="winw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">winw</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="winh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">winh</stringProp>
                  <stringProp name="Argument.value">979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rq</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rq_sess" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rq_sess</stringProp>
                  <stringProp name="Argument.value">8119a067-62e7-4e4b-ae82-3d9c931d19ac</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="secure" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">secure</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vcapirs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vcapirs</stringProp>
                  <stringProp name="Argument.value">8_1_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jparams" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jparams</stringProp>
                  <stringProp name="Argument.value">%7B%22puid6%22%3A%22HEAD_MAIN%22%2C%22puid44%22%3A%22RC1%22%2C%22puid61%22%3A%22948%22%2C%22puid29%22%3A%221%22%2C%22puid30%22%3A%22clear-night%22%2C%22pageNumber%22%3A%221%22%2C%22puid42%22%3A%226.05%22%2C%22pli%22%3A%22a%22%2C%22plp%22%3A%22a%22%2C%22pop%22%3A%22a%22%7D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="misc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">misc</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rq_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rq_type</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="grab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grab</stringProp>
                  <stringProp name="Argument.value">eyJncmFiX3ZlcnNpb24iOiA0fQp4nJ1a244c1RV95yvqA2wcDFGEZfkB8sIDCk_w7MRWsARYCn5I3vri8dgZ47HxECLj24AJSCiipqZ7urqrqlvyF1T9gr8ke621T1Wd6nEURQi72111Lnuvvfba-5yLn974_LNLb1z89OrlK5cu3rh247Orl-rndVqX9VFd1PNmdK6u6nWd1etm3Ezq_ExSb-zzrn1OkzrntzpvxvUqeTU6SOy9eT2r83pZV81evdTTIzxdFxeSeKzEZsLHsT2fc7DShhrV6Zmk-Qqz16tmYt_X9lpVp81-b26toz62_2d8wV6rFzY2X7OHJ_Z30dzlMuYcfGXPlnXZTG2wnM_csr85OJ-xddh-bQjbTrP3ZlI_iRaLn32-Ckvxf1k2uzbS-OI5Ge_iOZryjYt_vH7lbzDs25fqb-qMu9hgIRv7aCbinytbrS1sZvPetFltOc0ksckwbcpXMpunXpy1nZm14ZG1vZTrJ3xK6sNm2nxlr65kDWwzhbXs2dQW87av4blNd2T_wwErrLygNewxGRKmgynMvDIPfJVitMxWBwvY2m01z-zbhHY6solHNuW8N8sP9vY8mDzsdBo-2bDc77o-SmgOsxunlIFf_oJNuL9T-mFkc_ARbg3P2dDm75dFNClewX6OOXbz92Yfb2NrmMqwtLFvZmXgK2C2kHMB0dxWfJNou6XfswiZ3VS_O__OWbwAFBR8DCgaGcpgENuyucmszJmf0nC7cFJd8dkn9Y_1d711H2B7WPOGXl0jZrSghzCtTIkfLsA0T-WPiv9I63BHBf4xI3R3kvqE1r-DKSMTPbI3MIMt0dwGn9hD876TxsTNwsybETvD4Fxw1pKz53SDvyyHrfpmqr_2l-nPsb2FP-f0uUN3TugUCqI1vXbHx7bQgqt9LgtLWGnl3poRK1kf2p9c_vLTa1_8-cb1L5KPrn95w0jmAUOf7DMDyp0c-OcRqMF3aUiGZYXDlqcS_iYsVE4SeWTNB_b7ktavmmlrQiLqJGAcPl2K5Oi3E2wZS2_2CIYsGIOWsVUc2hiyS4A7lzShcVOS6_loFc_MibdlmNfEmpFD_XN9H_Z8-YvYDVCFL5u9ZudlATODLLjZZh8IegTvgmsj7hDRLgRlwRXGgQG5yjE-wJ8pN2jb2fZ_HLTPyDRz0LGMMYOVYNkCVjPbjTtKA81tm6ck9uZwcyX6NsiYSfLgXFtWfxtPbAYQn9ltp5leSOzRtc1ui31MBKywRA5bH9szE4Xzyoy2Z2Pd7TEx6TOnb8RLIBiNkNibTAj2q9KM-WcYiXhoxz6caK0afeEwCQEMAFle2-U0R4BNpRg6YvBXAWlZgrFslSPugmEDio4dqEg2Yqy4SjpxpiyRMAImek9wpV2PmQgnHBf4uKfsXvINQBeUlhItt5vp1h6BBGDC5pwZtibKc8qkwCmdWXIZc2btZQTuEaN9Sgmwd4bZG5aAN-Bs2PgOc1LIy2FPM49-GPZeM-kTrpCKyT0qH7nRLI6xvQ1i2IZNbea7iS9xLgjI2F0y1mRr0kreqY02dj0MS-65R1cGt59cfkzowjVAlwuGczp79hJSCTjdJZzBgS0XKzDyTq_kjJm91idI6lVz18w-xN5P9TNyzzdBIPHtqsvkF_izOAy8KfpsmR67t3Xcxl4RtAvaJUPkQ3ulcQb4Grjg-MfclbjcI5TMP-WGGElm7j4XkUG5adgo-7_48RFXV54qCTxa5_EsRBuSBATBLcx3mvoCOPZcQ9gba4-RdZyVnHqjDftkXEnYco5BaPY1GUPmrZyOmzEY-Un9PBo4ZdgUol9bYGLIEduCfJFQk7feeRcIugcgQ_VABK18pXPKacqpfcUk529jQcyAB6OA3A80VbmYyAZRWcooGTMMRsXqlSXvEiKla6vUo6OIZngEjLBQWMEfTPvaoTPfgosCa7bsboDFw-uk5dpjJZKqU2O0lEY6XV4axIfmlbwpqMnnjOFRULVh_9REayZafE2jOMPy9oIk1PPp4PkziYuOMSm9CrSm9Et07JoFThjqWJGSzhZHskgaiDWz8X37kXYUzCuvjtKgueKZy5bPWAB5RjrmM5ue7FqLEgqkDfiit5rHpKG72IEXD4EoOABh6ehaQoWOWqhXEqYIASwWLJCc_20SAK6lW9S9Gv2rN99TEtitpH5BAu6Fc86IH2nyyhEJDII2lyCuitQsLJwIOq8rYrSPodESrwvHxKvmKDr9uqHy51cjlYSfC19IDJUnetLlAkvc3PjSTPtmMtBI4O3DwDv3VGZg_O3UsIRcelY_7OZ5OyF33mH9HmfSvuRwXgtJlfOWihNsX3nQ8yoJK2E5fTJI3i3zbiljsVxPUtkTRkIlETCsBPhPATcYpqLYC5pEUOpN-6PHdq7oPD3Y0wuwcGgDhLKx7R7MbTWFNn3TU0VKVvIUb3s3kbxKvCDJIVF6S7jvXJF7FU6Arl0dotaG5sTrsN2W53rSodU-XvfYD71pvncWt6nA_bnybN-AsnViltqne5TPZUs6f5-GygEyQ5ObfNWfxXLurwlNzTrIFnQrEIMi0xXERnYZ5l7yZoGn6XIP4gKsLXmZUmB64tS41GQK3rSHAshMcZcrrCVdgAJoQthOIx5S9bPy0qtHe8wgd5h7pw7fmcih2x7pk7U16iriIo5YNEDGXnYpY4ba2ZspUmG9GrKZ9oNOyxdPUZHQIt1m4qmCBZ5y78dY3QMDxqJtXpiXMtURkLAo6cKaylZ5rJUK-w56avyxoFVRNd4WBLEO5LzdkBOOuOCgz0uARa_YPg9cHGdeU7j-XrmKyCURGWBop5HAFv59wqWbdRBwPYX-3uUr71___OqVa5e_ONW2PV3dNvg8M5mNDtjZ2I-w8M_6QCUTnUadm4rxgjRzE2N3Tzz9sfRpZYeHoyDYlmqqWU-L4WXoNG5IAXncGeG2dsXbacupRegmrrgqyTr0KuK8QsieqEfa9hVy5qJhwZfS2EdkrN02zS771e78ZRGAOAuCShN3bZ67gxr6fqt2vd_Wi7DXayPncenWZZC9bSwjRlCVsQMa55IPL__12ueh5dDhwBNvpvJIC1-oXZmyt0q2uymoJcaX4lIqO_o8i3OHWeUhh5ezS5ZkNBLIcVdo9nLQGxoTcO9KmlU0weYRNO8PXRkxSFGdtFj2SnDW8KiJZ-7UXwFVSteM4Zh6lwVY6DcYCIpsoItsD1M63psPypSB1eYSyzQnKSdlZG6oJGdcMoXUM2_TTbzVo2b_D-h8xfWsU8ka5tCGDxF3F2D-3GHH0moWCE9kCBzdI6cE5otGfaCkpayt1kXP76S1NKEEzhkn6hqtQOxocy8S73YvtkY-8C4EW12jViZkHlKhByqNU3agnTgNijKnzR31DB5SVoAHpxF1qywNFdlGKYid3C2kbVQdB7HDxhE1CIV2Tqk9C2Y8gnTaUpEhCCt1ANQeKnspcy6wit7nrZy3YEjZ28sIA6_W8KFQTAWZnKGjsFWFUrB2lJ_pH_pNLMFL5zqUeBUUFvF7V0cdG8qJcTsnrAEI25d-sX_kmmc2cGauWkIgnrfCaCzdNe93r7gaL-r6QUktvWxuGXg-_uCjs16DjtX-Ckz74dW__Onqlatfcj9tvR3KzBlnOpGXY33vhz-d0Iyz2hmRFs9kNqSNrGNe0gmLauetKqTmWT83IH1FhSG6Py3LaMJUiaPj4UKdKWDq2Cuh9jQoVL6hoqB0zNgBKgHhI8-_S_Wu5DO9braKCclT3iBV4MvGe6irM22Hnj3tlII07ziSCpYUwuMpBF7ca2KVT6Rz3Whm4ARFHVn23sfeKVozhkLtpG7gzFumxh5n3QehdE7DD_-lj2yTjbscfUgBuxtc2hPkrPl3lZHmQQRuHRx0DRMJ1tiYB4qR5_UL7KM7BMpDu5WFAzFaKUmw1RpwkkfJyVXZAennyHEyj7Li1-FkCTE1bY8_9_BPC6KecUyT0s-qDD2TpOHcJioOet3o02yQJt5JmHi3T43SDNvqH3ayOm0POyMPvXB4zsnqnjQ4Mlbl5YCfDfW6-jt6yvtwfkQdDrSHzdTn9XbZ7d2AFQszh1xhXyvSmcczMr1NhUOGkUv5kn6INueSnaQa9-FguB1mBUqQoEp2KViKvlTJulO6vK_NUi5KZzqFC75hiTMKZB6xd1t5p0EE40zpdvDb1sEZWHf9-s5bGrFwh8u2jRG4aNIJThesZrkyos_QHIaaQAbzJsSgQ7XSKlQKdi3hsMf2SJh_Sf9XXQmeEIkbASn0hU89Ka6_dbXQ34z7wRnw2GuRGRtebLZNXPEF9te2fCVRXB62nmjvLugwLPP1puKjKPC-J3K8XyVyBCQB2qWUg-vZrgfrYxWubFnfecenLZu-4_ls6vkp6iE4lKS3F-oNAoEd9DMBKRyFOi-HzS10I2LXR1n0rB2lgEdKnOyYrtSj3FA4TkI8qKe92542Ovdto-SF1yblKadOjFL-9xyCxM-Ewm2TY7rA9VWogrzXrW4GJl31qplYMgYd_JrSl8lkEQpRtlfWysb33d_HrVKErHz5i7HJTb_YgOsb9tWz-YCQ21bqPwKihl1V29kOCcGpVOisungp28MeLzKJE5giee_DTwZ3EU6hguGdi47XwmmTT0fRbZsaWu-gFY9IysqiyjCDoyRSbxHutITu1oWWRpjglOGxBB6Mh15B6scarlamUW5-6zcJW9o51chq-8iyvXOjJHkiUgZXZR49urDgcO-zyb-hRwdHy-hXwdIHGvTs-X7zp0WOd9RU18-UEQetk1T5PfUD8VhZ-R0oNsoCNUdtcXVXbHA__netUQVceG9bxVJIA4UKpq52QD29d6pGuHfqkbdXCSqF_HzjpM-cTFHhwHOQWbsbUvN4s-2ZXerGKjQjRY7tpeq3-NfhuEuSKzq-XMaYe02OOKSoVfPuNrhZp2PNKNxT6l1FmHGEkd_PWqurGtULvueNJ52YIKMzjSfGGIe4FzI8FaJvVgnbX0edrmwP2L3ZpC-c7Vu1eQcHea59U938UL-5f0ROsdo7B6295-t9zTR0_9VpwlXEwZmJ59KuWTkXJ_CyQOItn4Zn2nSaaYNtMq86cVRxfWsY_6ba6f3G9GDukrTgSf2E8whNue7B-HkzD7tyKpSFN-FKneHEjsT68MqOy-ZSp90bpgNdxft4oJ_bxiHZSG2tTi75BR_JmBxNpZJvFMPzOkIycKpucqiDUoULDoM6EAjt6ZTuptMsQDycV5SRWvmZF21ejZ52N21ejR63bBVOPYM9KK9gCp8p2v1jEsGCXb7U65xOVPWijiVp1zb0uF2der1LKvX9P3z8we_PvvXu_9Dc4l2NEY8rCwfwFkXFx8d5dH2k33wOdNJecmjvNVg9Gt9peOgNeUrYaOPSr3L78KQy0sXf4ToBs-KBPmXdsVA6bCbe90y5j25ZSi3hZXboLQ5bOrREFZrsIQ14aycPhZXkne5YRKK5125CdN73W8Di1pn63o952-l2kKVTJfxw1qFVdPK84tPTnrFNFE37TF1SVx1H0fF97Vcry-6mjK78moXDMVUYuyveM12YTXnVT0XToF3kc5zz68HndP_6P24ChMw%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browser_family" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">browser_family</stringProp>
                  <stringProp name="Argument.value">Edge</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browser_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">browser_version</stringProp>
                  <stringProp name="Argument.value">89.0.774.57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="os_family" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">os_family</stringProp>
                  <stringProp name="Argument.value">Windows</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="os_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">os_version</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="device_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">device_type</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="top" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">top</stringProp>
                  <stringProp name="Argument.value">1135</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="left" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">left</stringProp>
                  <stringProp name="Argument.value">332</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fpruid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fpruid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1eIZSZuAQYXhAA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lruid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lruid</stringProp>
                  <stringProp name="Argument.value">pQ8AALraYGCbEmwWAQE%2BegA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">Begun_Autocontext_saveFeed1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fwww.rambler.ru%2F</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ssp.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/context.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/sync2.204-157" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="anket_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">anket_id</stringProp>
                  <stringProp name="Argument.value">3396%3A622</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">85</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ruid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ruid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1eIZSZuAQYXhAA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">profile.ssp.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sync2.204</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/jsonrpc-153" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jsonrpc</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/jsonrpc-151" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;method&quot;:&quot;Rambler::Id::Aux::get_rsidx&quot;,&quot;params&quot;:[{}],&quot;rpc&quot;:&quot;2.0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jsonrpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-Client-Request-Id</stringProp>
                  <stringProp name="Header.value">ridkmtkch0jg67cu9tnd</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/jsonrpc-154" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;method&quot;:&quot;Rambler::Id::Aux::get_rsidx&quot;,&quot;params&quot;:[{}],&quot;rpc&quot;:&quot;2.0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jsonrpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-Client-Request-Id</stringProp>
                  <stringProp name="Header.value">ridkmtkch0jiebjvmjmh</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/jsonrpc-155" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;method&quot;:&quot;Rambler::Id::get_profile_info&quot;,&quot;params&quot;:[{&quot;get_chain_id&quot;:0,&quot;get_accounts_by_provider&quot;:&quot;uniq.lp.love.passport.rambler.ru&quot;}],&quot;rpc&quot;:&quot;2.0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jsonrpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/jsonrpc-156" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;method&quot;:&quot;Rambler::Id::get_profile_info&quot;,&quot;params&quot;:[{&quot;get_chain_id&quot;:0,&quot;get_accounts_by_provider&quot;:&quot;uniq.lp.love.passport.rambler.ru&quot;}],&quot;rpc&quot;:&quot;2.0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jsonrpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/jsonrpc-159" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rpc&quot;:&quot;2.0&quot;,&quot;method&quot;:&quot;Rambler::Id::get_profile_info&quot;,&quot;params&quot;:[{&quot;get_accounts_by_provider&quot;:&quot;uniq.passport.rambler.ru&quot;,&quot;get_chain_id&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jsonrpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/jsonrpc-158" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;method&quot;:&quot;Rambler::Id::get_profile_info&quot;,&quot;params&quot;:[{&quot;get_chain_id&quot;:1,&quot;get_accounts_by_provider&quot;:&quot;uniq.lp.love.passport.rambler.ru&quot;}],&quot;rpc&quot;:&quot;2.0&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">id.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/jsonrpc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/wZK50k183/31b522w21O/-HhZWrWdxB7KaAHwaf3OPOV_9N24MPJnfd4Bddwxksf9ecaPVPJkhqR81P52JrcrOnOtb8OMrVhdA0rU3oIhZNhYPnijufQG9l1C732HwTTdTMzavAn0cUT6HU_BF93h7nfNm3DZHbeIe9u5dj6eBBxnklLdkLlVdxde3MKlL3__ZBR4u5nTJ9Vebehpp_gAzEjA87UK2HVexit03xPt3c5-7aJnyBy4smvEnG4emTIEdopoy6WGa2E0fMHFpThR-lgPTqy30hzEYH_7fqr5K-Zy2cmUBc5sRdEkdPsn9PbOV8iyc9cEsqt7z4R4Go0kIny3T-e2mXZ4G27O4aMEUtJ8Nkubl_YBzExE7W2HwQXjRvjjlgjpaF_bJnvANub92GDmlmPmEqGTWeS3UCWZCBxbhnLps493ZSx46sCHA1_keydDv7T3JsRCethpodUbylzl6pYrz21m2T5jyTvI8-tS0IJZ5Ambk1DEi34GmQs_Y4Ve-KWTVWEBf8jNtSNV73ovbJOT9z36TH_1XqjaF8N8-fedLd93dfcpSdgS38D6XdGRS_c4poBv3ax4GJg-FGCXeNmou1NWKE70wbwSduhwD0-goNEA_UBZx0a_9zfJSv7tjSDBdHPaGmPuPcjh933DpULzCYyGb_y8URqLARNhqW7YsI5lfD5p6MGiCX_kYTNFgr_WPNxVZdBYgOUO8UnY7I447HJlyRtj_RXP--Rf7JVn1i-TlW3vrVA_vhAXXr5Fzb6CQUU6XM3JvzJbyn4ZQ6KY1h_ZdE7LeYf9MdJaxMq6GNpqbd86StMV1tHufvaKSOULkL1q56xUPJ0aGm6ORcirsG1KHU7OwqQpfu9rMG-ikdcW-Uxuymmj4yXrVszLhwTsZlblHV75Kdn-7mbcsGXUM72lb-S7ZTmOHDpupX3vtptARitK3MWCKU3xbxRphaXDC997RuBGveQy3lD62JMV0Gh_6iVq7wM/context.jsp-152" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="wl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">wl</stringProp>
                  <stringProp name="Argument.value">rambler</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="json" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">json</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pad_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pad_id</stringProp>
                  <stringProp name="Argument.value">469345540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="first" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">first</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block_id</stringProp>
                  <stringProp name="Argument.value">492316873</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="screenw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screenw</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="screenh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screenh</stringProp>
                  <stringProp name="Argument.value">1080</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="winw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">winw</stringProp>
                  <stringProp name="Argument.value">1920</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="winh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">winh</stringProp>
                  <stringProp name="Argument.value">979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rq</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rq_sess" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rq_sess</stringProp>
                  <stringProp name="Argument.value">30590FE0B1B6DB9F07F4028BCCA2BDF4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="secure" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">secure</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vcapirs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vcapirs</stringProp>
                  <stringProp name="Argument.value">8_1_0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jparams" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jparams</stringProp>
                  <stringProp name="Argument.value">%7B%22puid42%22%3A%225.6%22%2C%22pli%22%3A%22a%22%2C%22plp%22%3A%22a%22%2C%22pop%22%3A%22a%22%7D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rq_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rq_type</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="grab" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grab</stringProp>
                  <stringProp name="Argument.value">eyJncmFiX3ZlcnNpb24iOiA0fQp4nKVVy05aURSd-xXbWZsoRJ0SEtIBaXzUpE4cXguVU4FL8NKGpoML9KHRtGlt-kxbjcMOiih6EYTEL9jnF_olXfscLReffQwucPc5e621n8QyXi4bH4pl0k4qHvOUl03HucVdXSNd4S7vcJ0POSD9iviI69rXNV3lLukaH-DpnBz_9N8Sb-KlA482N7Uf5R7cA4AcxqIWNxY1LEOxBTdVFs6xOH_DpQ6efW5yh7ghEIaJW-ABr4-fO9BT1TX4j4nbeHyuqNwsJYpuzgH1BvEH3jXSVowa3uM2BPcDgOe49eTPINqH7Sh8E5YA3GDhI72mn1HSyQE6Stn044yTX1KRRTFECmkvBHUx6SoIBLzLDaMtqZKPFN0tFQrO6Kx89hEmVT6vHqg83U87XoQmE_N3Jm_bXH6UEowM1GBEijBK_CVUBt4Ol2EYx_Nuaa60kA7J_CcounFWnFN2l9RNeElJ4fcCT1WvRyKRPlci-1Dl59yUU7ZluYz6CmLg0RNKpvOqtExT5aK6t_wHsVwVyaBeyhUmCL5NmHto1brUXJzMxbYp5_nALDHxVmgk-Md1tCE0Oi9Eupym1GLGS5RSyg2RvTft_xyN1IjgVlNXh4V6wLljJnCND0XWBeE0SD-FZl_0wNak6dkJW5StS8vHWzJz3Laj3EJHY5BNP867I7TsLjhLigQMrBVd7TtO36IZt5hz8tc01XH7bByQjYlHHE352TDDGeBFgsBrYOd0QOV_DP82DmXQAxNEW6-bnYb2CSQek67A-vZgr5hJFoPQDKxD3pDU6LUQ9ldJF9Tvoaq6crzJPUHDPqmatRjQjFMsea6V_MnSIwW-NbwGuBhW8N1C9ZAR2Xp-iOB0Ve4KvwHXL2UtWoB34DoAG1qjAXKUwKjfM2vzFOINAJomVEk3HX__-1UvJQz0qpyFgKXmFYlG5NsM_V7_XD-5GD3Z-1H7n_ML8ZevfA%3D%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browser_family" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">browser_family</stringProp>
                  <stringProp name="Argument.value">Edge</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="browser_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">browser_version</stringProp>
                  <stringProp name="Argument.value">89.0.774.57</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="os_family" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">os_family</stringProp>
                  <stringProp name="Argument.value">Windows</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="os_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">os_version</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="device_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">device_type</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="top" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">top</stringProp>
                  <stringProp name="Argument.value">25</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="left" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">left</stringProp>
                  <stringProp name="Argument.value">1717</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fpruid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fpruid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1eIZSZuAQYXhAA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lruid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lruid</stringProp>
                  <stringProp name="Argument.value">pQ8AAOraYGDDRL2vAbibTgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">callback</stringProp>
                  <stringProp name="Argument.value">Begun_Autocontext_saveFeed1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fwww.rambler.ru%2F</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fnova.rambler.ru%2Fsearch%3Futm_source%3Dhead%26utm_campaign%3Dself_promo%26utm_medium%3Dform%26utm_content%3Dsearch%26query%3D%25D0%25B9%25D0%25BE%25D1%2583%2520%25D1%2581%25D0%25BE%25D0%25B1%25D0%25B0%25D0%25BA%25D0%25B8%2520%25D1%258F%2520%25D0%25BD%25D0%25B0%25D1%2580%25D1%2583%25D1%2582%25D0%25BE%2520%25D1%2583%25D0%25B7%25D1%2583%25D0%25BC%25D0%25B0%25D0%25BA%25D0%25B8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wZK50k183/31b522w21O/-HhZWrWdxB7KaAHwaf3OPOV_9N24MPJnfd4Bddwxksf9ecaPVPJkhqR81P52JrcrOnOtb8OMrVhdA0rU3oIhZNhYPnijufQG9l1C732HwTTdTMzavAn0cUT6HU_BF93h7nfNm3DZHbeIe9u5dj6eBBxnklLdkLlVdxde3MKlL3__ZBR4u5nTJ9Vebehpp_gAzEjA87UK2HVexit03xPt3c5-7aJnyBy4smvEnG4emTIEdopoy6WGa2E0fMHFpThR-lgPTqy30hzEYH_7fqr5K-Zy2cmUBc5sRdEkdPsn9PbOV8iyc9cEsqt7z4R4Go0kIny3T-e2mXZ4G27O4aMEUtJ8Nkubl_YBzExE7W2HwQXjRvjjlgjpaF_bJnvANub92GDmlmPmEqGTWeS3UCWZCBxbhnLps493ZSx46sCHA1_keydDv7T3JsRCethpodUbylzl6pYrz21m2T5jyTvI8-tS0IJZ5Ambk1DEi34GmQs_Y4Ve-KWTVWEBf8jNtSNV73ovbJOT9z36TH_1XqjaF8N8-fedLd93dfcpSdgS38D6XdGRS_c4poBv3ax4GJg-FGCXeNmou1NWKE70wbwSduhwD0-goNEA_UBZx0a_9zfJSv7tjSDBdHPaGmPuPcjh933DpULzCYyGb_y8URqLARNhqW7YsI5lfD5p6MGiCX_kYTNFgr_WPNxVZdBYgOUO8UnY7I447HJlyRtj_RXP--Rf7JVn1i-TlW3vrVA_vhAXXr5Fzb6CQUU6XM3JvzJbyn4ZQ6KY1h_ZdE7LeYf9MdJaxMq6GNpqbd86StMV1tHufvaKSOULkL1q56xUPJ0aGm6ORcirsG1KHU7OwqQpfu9rMG-ikdcW-Uxuymmj4yXrVszLhwTsZlblHV75Kdn-7mbcsGXUM72lb-S7ZTmOHDpupX3vtptARitK3MWCKU3xbxRphaXDC997RuBGveQy3lD62JMV0Gh_6iVq7wM/context.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-161" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">cv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">29811</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960186.572-1689039716</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">1343049692</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">antiadblock%3Doff</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22AdBlock_no%22%2C%22recsys_rambler%22%2C%22version_new_dd2%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">75711616960186585</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-162" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">pv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">29811</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960186.572-1689039716</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">838675696</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bs</stringProp>
                  <stringProp name="Argument.value">1920x979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ce</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pt</stringProp>
                  <stringProp name="Argument.value">%D0%A0%D0%B0%D0%BC%D0%B1%D0%BB%D0%B5%D1%80%2F%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%2C%20%D0%BF%D0%BE%D1%87%D1%82%D0%B0%20%D0%B8%20%D0%BF%D0%BE%D0%B8%D1%81%D0%BA%20%E2%80%94%20%D0%BC%D0%B5%D0%B4%D0%B8%D0%B9%D0%BD%D1%8B%D0%B9%20%D0%BF%D0%BE%D1%80%D1%82%D0%B0%D0%BB%3A%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D0%A0%D0%BE%D1%81%D1%81%D0%B8%D0%B8%20%D0%B8%20%D0%BC%D0%B8%D1%80%D0%B0%2C%20%D1%8D%D0%BB%D0%B5%D0%BA%D1%82%D1%80%D0%BE%D0%BD%D0%BD%D0%B0%D1%8F%20%D0%BF%D0%BE%D1%87%D1%82%D0%B0%2C%20%D0%BF%D0%BE%D0%B3%D0%BE%D0%B4%D0%B0%2C%20%D1%80%D0%B0%D0%B7%D0%B2%D0%BB%D0%B5%D0%BA%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5%20%D0%B8%20%D0%BA%D0%BE%D0%BC%D0%BC%D1%83%D0%BD%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D1%8B%D0%B5%20%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B.%20%D0%9D%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%81%D0%B5%D0%B3%D0%BE%D0%B4%D0%BD%D1%8F%20%D0%B8%20%D1%81%D0%B5%D0%B9%D1%87%D0%B0%D1%81</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1920x1080</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="la" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">la</stringProp>
                  <stringProp name="Argument.value">en-US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ja" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ja</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="acn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">acn</stringProp>
                  <stringProp name="Argument.value">Mozilla</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="an" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">an</stringProp>
                  <stringProp name="Argument.value">Netscape</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">Win32</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tz</stringProp>
                  <stringProp name="Argument.value">-180</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="lv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lv</stringProp>
                  <stringProp name="Argument.value">1616949366730%3A%3A1616960166730</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fwww.rambler.ru%2F</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22AdBlock_no%22%2C%22recsys_rambler%22%2C%22version_new_dd2%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">34671616960186580</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-163" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">cv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">29811</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960186.572-1689039716</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">1214928660</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">rec%253A%253Anull%253A%253Anull%253A%253Anull%253A%253Ablockinit%253A%253Ad52e75bf1f8743eca66e3e8c91fb863c%253A%253Anull%253A%253AvAsAACOBU2DMAUSxAc49JwB%253D%253A%253Anull%253A%253ARCM-122C%253A%253ARCM-122C%253A%253Anull%253A%253Anull%253A%253Anull%253A%253Ahttps%253A%252F%252Fwww.rambler.ru%252F%253A%253Anull%253A%253Anull%253A%253Anull%253A%253A1616960187756-e8c3973473514-1341588979%253A%253Anull%253A%253Anull%253A%253Anull%3Dnull</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22AdBlock_no%22%2C%22recsys_rambler%22%2C%22version_new_dd2%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">30201616960187757</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-164" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">pv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">7320059</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960186.582-1089767192</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">1786192988</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bs</stringProp>
                  <stringProp name="Argument.value">1920x979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ce</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pt</stringProp>
                  <stringProp name="Argument.value">%D0%A0%D0%B0%D0%BC%D0%B1%D0%BB%D0%B5%D1%80%2F%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%2C%20%D0%BF%D0%BE%D1%87%D1%82%D0%B0%20%D0%B8%20%D0%BF%D0%BE%D0%B8%D1%81%D0%BA%20%E2%80%94%20%D0%BC%D0%B5%D0%B4%D0%B8%D0%B9%D0%BD%D1%8B%D0%B9%20%D0%BF%D0%BE%D1%80%D1%82%D0%B0%D0%BB%3A%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D0%A0%D0%BE%D1%81%D1%81%D0%B8%D0%B8%20%D0%B8%20%D0%BC%D0%B8%D1%80%D0%B0%2C%20%D1%8D%D0%BB%D0%B5%D0%BA%D1%82%D1%80%D0%BE%D0%BD%D0%BD%D0%B0%D1%8F%20%D0%BF%D0%BE%D1%87%D1%82%D0%B0%2C%20%D0%BF%D0%BE%D0%B3%D0%BE%D0%B4%D0%B0%2C%20%D1%80%D0%B0%D0%B7%D0%B2%D0%BB%D0%B5%D0%BA%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5%20%D0%B8%20%D0%BA%D0%BE%D0%BC%D0%BC%D1%83%D0%BD%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D1%8B%D0%B5%20%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B.%20%D0%9D%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%81%D0%B5%D0%B3%D0%BE%D0%B4%D0%BD%D1%8F%20%D0%B8%20%D1%81%D0%B5%D0%B9%D1%87%D0%B0%D1%81</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1920x1080</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="la" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">la</stringProp>
                  <stringProp name="Argument.value">en-US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ja" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ja</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="acn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">acn</stringProp>
                  <stringProp name="Argument.value">Mozilla</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="an" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">an</stringProp>
                  <stringProp name="Argument.value">Netscape</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">Win32</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tz</stringProp>
                  <stringProp name="Argument.value">-180</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="lv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lv</stringProp>
                  <stringProp name="Argument.value">1616949366730%3A%3A1616960166730</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fwww.rambler.ru%2F</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22AdBlock_no%22%2C%22recsys_rambler%22%2C%22version_new_dd2%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">88741616960186583</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fip</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1eIZSZuAQYXhAA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-167" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">7320059</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960186.582-1089767192</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">1956668512</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ping_ext" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ping_ext</stringProp>
                  <stringProp name="Argument.value">%7B%22activity%22%3A%7B%22mousemove%22%3A3%2C%22keydown%22%3A1%7D%2C%22scroll%22%3A%7B%22max%22%3A0%2C%22min%22%3A0%2C%22current%22%3A0%7D%2C%22num%22%3A1%2C%22duration%22%3A5000%7D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">ping</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22recsys_rambler%22%2C%22version_new_dd2%22%2C%22prime_status_off%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">54961616960191584</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fip" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fip</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1eIZSZuAQYXhAA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-160" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">cv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">29811</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960186.572-1689039716</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">1871165545</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">rec%253A%253Anull%253A%253Anull%253A%253Anull%253A%253Ahubpageview%253A%253Anull%253A%253Anull%253A%253AvAsAACOBU2DMAUSxAc49JwB%253D%253A%253Anull%253A%253ARCM-122C%253A%253ARCM-122C%253A%253Anull%253A%253Anull%253A%253Anull%253A%253Ahttps%253A%252F%252Fwww.rambler.ru%252F%253A%253Anull%253A%253Anull%253A%253Anull%253A%253A1616960187756-e8c3973473514-1341588979%253A%253Anull%253A%253Anull%253A%253Anull%3Dmain</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22AdBlock_no%22%2C%22recsys_rambler%22%2C%22version_new_dd2%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">51991616960187756</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-166" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">cv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">4455308</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960233.667-384227424</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">1377922641</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">direct_halfpremium%3Dtrue</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22a0%22%2C%22a9%22%2C%22e11%22%2C%22a12%22%2C%22a13%22%2C%22d14%22%2C%22a23%22%2C%22a26%22%2C%22b28%22%2C%22a29%22%2C%22a30%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">15821616960234158</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-165" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">pv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">7040998</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960188.967-504030773</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">2124979937</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bs</stringProp>
                  <stringProp name="Argument.value">1920x979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ce</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pt</stringProp>
                  <stringProp name="Argument.value">%D0%A0%D0%B0%D0%BC%D0%B1%D0%BB%D0%B5%D1%80%2F%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%2C%20%D0%BF%D0%BE%D1%87%D1%82%D0%B0%20%D0%B8%20%D0%BF%D0%BE%D0%B8%D1%81%D0%BA%20%E2%80%94%20%D0%BC%D0%B5%D0%B4%D0%B8%D0%B9%D0%BD%D1%8B%D0%B9%20%D0%BF%D0%BE%D1%80%D1%82%D0%B0%D0%BB%3A%20%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D0%A0%D0%BE%D1%81%D1%81%D0%B8%D0%B8%20%D0%B8%20%D0%BC%D0%B8%D1%80%D0%B0%2C%20%D1%8D%D0%BB%D0%B5%D0%BA%D1%82%D1%80%D0%BE%D0%BD%D0%BD%D0%B0%D1%8F%20%D0%BF%D0%BE%D1%87%D1%82%D0%B0%2C%20%D0%BF%D0%BE%D0%B3%D0%BE%D0%B4%D0%B0%2C%20%D1%80%D0%B0%D0%B7%D0%B2%D0%BB%D0%B5%D0%BA%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5%20%D0%B8%20%D0%BA%D0%BE%D0%BC%D0%BC%D1%83%D0%BD%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D1%8B%D0%B5%20%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B.%20%D0%9D%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B8%20%D1%81%D0%B5%D0%B3%D0%BE%D0%B4%D0%BD%D1%8F%20%D0%B8%20%D1%81%D0%B5%D0%B9%D1%87%D0%B0%D1%81</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1920x1080</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="la" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">la</stringProp>
                  <stringProp name="Argument.value">en-US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ja" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ja</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="acn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">acn</stringProp>
                  <stringProp name="Argument.value">Mozilla</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="an" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">an</stringProp>
                  <stringProp name="Argument.value">Netscape</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">Win32</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tz</stringProp>
                  <stringProp name="Argument.value">-180</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="lv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lv</stringProp>
                  <stringProp name="Argument.value">1616949366730%3A%3A1616960166730</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">prime_enabled%3Dfalse</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fwww.rambler.ru%2F</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">45291616960188972</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-168" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">pv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">4455308</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960233.667-384227424</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">1079371229</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bs</stringProp>
                  <stringProp name="Argument.value">1920x979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ce</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fwww.rambler.ru%2F</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pt</stringProp>
                  <stringProp name="Argument.value">%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8%20%E2%80%94%20%D0%A0%D0%B0%D0%BC%D0%B1%D0%BB%D0%B5%D1%80%2F%D0%BF%D0%BE%D0%B8%D1%81%D0%BA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1920x1080</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="la" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">la</stringProp>
                  <stringProp name="Argument.value">en-US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ja" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ja</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="acn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">acn</stringProp>
                  <stringProp name="Argument.value">Mozilla</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="an" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">an</stringProp>
                  <stringProp name="Argument.value">Netscape</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">Win32</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tz</stringProp>
                  <stringProp name="Argument.value">-180</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="lv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lv</stringProp>
                  <stringProp name="Argument.value">1616946987252%3A%3A1616957787252</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fnova.rambler.ru%2Fsearch%3Futm_source%3Dhead%26utm_campaign%3Dself_promo%26utm_medium%3Dform%26utm_content%3Dsearch%26query%3D%25D0%25B9%25D0%25BE%25D1%2583%2520%25D1%2581%25D0%25BE%25D0%25B1%25D0%25B0%25D0%25BA%25D0%25B8%2520%25D1%258F%2520%25D0%25BD%25D0%25B0%25D1%2580%25D1%2583%25D1%2582%25D0%25BE%2520%25D1%2583%25D0%25B7%25D1%2583%25D0%25BC%25D0%25B0%25D0%25BA%25D0%25B8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22a0%22%2C%22a9%22%2C%22e11%22%2C%22a12%22%2C%22a13%22%2C%22d14%22%2C%22a23%22%2C%22a26%22%2C%22b28%22%2C%22a29%22%2C%22a30%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">89981616960233682</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-169" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">pv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">3120524</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960233.685-1436999409</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">168804671</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bs</stringProp>
                  <stringProp name="Argument.value">1920x979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ce</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fwww.rambler.ru%2F</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pt</stringProp>
                  <stringProp name="Argument.value">%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8%20%E2%80%94%20%D0%A0%D0%B0%D0%BC%D0%B1%D0%BB%D0%B5%D1%80%2F%D0%BF%D0%BE%D0%B8%D1%81%D0%BA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1920x1080</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="la" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">la</stringProp>
                  <stringProp name="Argument.value">en-US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ja" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ja</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="acn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">acn</stringProp>
                  <stringProp name="Argument.value">Mozilla</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="an" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">an</stringProp>
                  <stringProp name="Argument.value">Netscape</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">Win32</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tz</stringProp>
                  <stringProp name="Argument.value">-180</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="lv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lv</stringProp>
                  <stringProp name="Argument.value">1616946987252%3A%3A1616957787252</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fnova.rambler.ru%2Fsearch%3Futm_source%3Dhead%26utm_campaign%3Dself_promo%26utm_medium%3Dform%26utm_content%3Dsearch%26query%3D%25D0%25B9%25D0%25BE%25D1%2583%2520%25D1%2581%25D0%25BE%25D0%25B1%25D0%25B0%25D0%25BA%25D0%25B8%2520%25D1%258F%2520%25D0%25BD%25D0%25B0%25D1%2580%25D1%2583%25D1%2582%25D0%25BE%2520%25D1%2583%25D0%25B7%25D1%2583%25D0%25BC%25D0%25B0%25D0%25BA%25D0%25B8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22a0%22%2C%22a9%22%2C%22e11%22%2C%22a12%22%2C%22a13%22%2C%22d14%22%2C%22a23%22%2C%22a26%22%2C%22b28%22%2C%22a29%22%2C%22a30%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">86631616960233686</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-173" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">cv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">4455308</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960233.667-384227424</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">1775149932</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">direct_rtb%3Dfalse</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22a0%22%2C%22a9%22%2C%22e11%22%2C%22a12%22%2C%22a13%22%2C%22d14%22%2C%22a23%22%2C%22a26%22%2C%22b28%22%2C%22a29%22%2C%22a30%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">77141616960234159</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-171" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">pv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">1523552</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960233.686-1510842309</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">1320856007</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">bs</stringProp>
                  <stringProp name="Argument.value">1920x979</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ce</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rf</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fwww.rambler.ru%2F</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pt</stringProp>
                  <stringProp name="Argument.value">%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8%20%E2%80%94%20%D0%A0%D0%B0%D0%BC%D0%B1%D0%BB%D0%B5%D1%80%2F%D0%BF%D0%BE%D0%B8%D1%81%D0%BA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1920x1080</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="la" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">la</stringProp>
                  <stringProp name="Argument.value">en-US</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ja" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ja</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="acn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">acn</stringProp>
                  <stringProp name="Argument.value">Mozilla</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="an" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">an</stringProp>
                  <stringProp name="Argument.value">Netscape</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pl</stringProp>
                  <stringProp name="Argument.value">Win32</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tz" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tz</stringProp>
                  <stringProp name="Argument.value">-180</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="sv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sv</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata"></stringProp>
                </elementProp>
                <elementProp name="lv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lv</stringProp>
                  <stringProp name="Argument.value">1616946987252%3A%3A1616957787252</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">https%3A%2F%2Fnova.rambler.ru%2Fsearch%3Futm_source%3Dhead%26utm_campaign%3Dself_promo%26utm_medium%3Dform%26utm_content%3Dsearch%26query%3D%25D0%25B9%25D0%25BE%25D1%2583%2520%25D1%2581%25D0%25BE%25D0%25B1%25D0%25B0%25D0%25BA%25D0%25B8%2520%25D1%258F%2520%25D0%25BD%25D0%25B0%25D1%2580%25D1%2583%25D1%2582%25D0%25BE%2520%25D1%2583%25D0%25B7%25D1%2583%25D0%25BC%25D0%25B0%25D0%25BA%25D0%25B8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22a0%22%2C%22a9%22%2C%22e11%22%2C%22a12%22%2C%22a13%22%2C%22d14%22%2C%22a23%22%2C%22a26%22%2C%22b28%22%2C%22a29%22%2C%22a30%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">65751616960233687</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-170" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">cv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">4455308</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960233.667-384227424</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">2132841982</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">is_bot%3Dfalse</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22a0%22%2C%22a9%22%2C%22e11%22%2C%22a12%22%2C%22a13%22%2C%22d14%22%2C%22a23%22%2C%22a26%22%2C%22b28%22%2C%22a29%22%2C%22a30%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">31421616960234159</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-174" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">hints</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">metric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-172" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">cv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">29811</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960186.572-1689039716</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">1976633706</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">prime_status%3Doff</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22recsys_rambler%22%2C%22version_new_dd2%22%2C%22prime_status_off%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">70371616960188967</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-176" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1616960232</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">tmp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">t3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">direct_rtb_false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">img</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-175" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1616960232</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">js_enabled</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">js_enabled</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">metric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-178" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1616960232</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">tmp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">t3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">entity_search_false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">img</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-180" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1616960232</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">tmp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">t3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">direct_media_false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">img</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-179" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1616960232</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">tmp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">t3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">direct_halfpremium_true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">img</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-177" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">av</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">direct_media</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">metric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-184" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">entitysearch</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">metric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-182" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">av</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">direct_halfpremium</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">metric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">i</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-181" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">av</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">direct_premium</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">metric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">i</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-187" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">cv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">4455308</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960233.667-384227424</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">218921442</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">aab%3Dnone%253A%253ANOT_BLOCKED</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22a0%22%2C%22a9%22%2C%22e11%22%2C%22a12%22%2C%22a13%22%2C%22d14%22%2C%22a23%22%2C%22a26%22%2C%22b28%22%2C%22a29%22%2C%22a30%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">14001616960237343</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-190" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">cv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">4455308</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960233.667-384227424</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">1270110031</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">direct_premium%3Dtrue</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22a0%22%2C%22a9%22%2C%22e11%22%2C%22a12%22%2C%22a13%22%2C%22d14%22%2C%22a23%22%2C%22a26%22%2C%22b28%22%2C%22a29%22%2C%22a30%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">71471616960234158</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-188" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1616960232</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">js_enabled</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">ignore</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">metric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-186" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">av</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">direct_halfpremium</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">metric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">i</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-183" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">av</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">direct_halfpremium</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">metric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">i</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-196" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">t1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">tmp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">img</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-192" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1616960232</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">tmp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">t3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">direct_premium_true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">img</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-193" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">av</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">direct_premium</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">metric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">i</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-191" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">cv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">4455308</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960233.667-384227424</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">1076833803</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">entity_search%3Dfalse</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22a0%22%2C%22a9%22%2C%22e11%22%2C%22a12%22%2C%22a13%22%2C%22d14%22%2C%22a23%22%2C%22a26%22%2C%22b28%22%2C%22a29%22%2C%22a30%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">21621616960234158</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/cnt/-189" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="et" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">et</stringProp>
                  <stringProp name="Argument.value">cv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pid</stringProp>
                  <stringProp name="Argument.value">4455308</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rid</stringProp>
                  <stringProp name="Argument.value">1616960233.667-384227424</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">t1.29811.669076904.1616085289471</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.17.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rn</stringProp>
                  <stringProp name="Argument.value">739125702</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">direct_media%3Dfalse</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">%5B%22a0%22%2C%22a9%22%2C%22e11%22%2C%22a12%22%2C%22a13%22%2C%22d14%22%2C%22a23%22%2C%22a26%22%2C%22b28%22%2C%22a29%22%2C%22a30%22%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eid</stringProp>
                  <stringProp name="Argument.value">73541616960234159</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fid</stringProp>
                  <stringProp name="Argument.value">pA8AAN9Js1fsR7EfAaafwgA%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">kraken.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/cnt/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/wZK50k183/31b522w21N/-WcRQbiViAHcagHwfb_zD8FMmPCCTchBWvQNddJv4-rdVea8ftIDs5ht5bFrMNIDNFmmU-m1zVBaJkW5x5sJZ-RPHnibu-gI3WB_z2688jr3bv_SgCvpVG3XAnfLBezi5Wbeu3rrBaWhSfmLdhadJSdXrUfNnrRhdiFK_seDIEjCWyFFhaf8Bfd0a8dym_wh0FLV0pgLznVO1C1w3yXV1vRi0pJz6Cmhu3XPsGgSrRkHXo1-2o-1bkwxVdvfoyd-2ko5f5OSwzvhV0nadZvrD9VuzuSPJc9OX-o_Y8go1P3eWMuoUuc_uKBiwLBMJrQyB3eobs6QrWRVIV7DyaczaPxABFi_gdwm-Hhb1VGd1wz9SvfhuAXrU1fGBHXbBezT22zqglDqGLy6aMK_dzemORFAhkreobt3bQN18OGYJ0TCZzVlsYTKJ-VPTfFwudABy03m6Zwm6nRfyDpA3yP4zfJ294tQyT65g2rap346iDcicrBe5KOgTW0KVczPuydH4V82SaCS1gXhYkrTfYvwC8BM7sawAepvYcY_begq98H7VuuWW88uo5BEzY1vE58EM32xTfawkXB-NUzryaUmcspcJG-Bn_4D1kt773GCwSjHRs7lgzLMUmbKGV_wPdrh8WDsjEvCMKCWaf6nWTyIJT5do3n_tKBaeDVt--CnNU3NXRp5gIfLNfxdXPNxnNohy1fy76Ety25H3yVI7gLI2Mljyo1I2h2mgHr_p0oUjz8tf4xJ2pGGRWs3furhggBcyWINUpWJxxHFWWnWeYHhBeVI2OmBCstNQv4OU88F0OfqcNarfPorvohs3o5kFJYVJ16WVvWiokZDMHbr5YEjVsRSPVKQnPU9yn571XKa-iDAXfHFgQPKRGLGLlLfIc7z03zeqkHmHbKzVvmaTiiZOidGvGzYk5prWzV1_NSEMFDkUhZqt4HeEMZIf8d1vPoT3lnVw6Y33llE8QZ48D8img=YXKFHJLiZ0yZq5Vrj3hInDRHr57caHrLNqz*0TzN59an0lcK3V3YF0iKbPuEZF8DRrFgD5egNvxBpkO4mHQGgItn2b56pgRRb*HIpiwCmxOG9P2XDujnRdnX4kR4zQyCa7FJZCiT-2l6l5RwTOfv5j4PMKhRHlcK3gPZbZYfP948bHb-9v0QVuOZVg7Y-mm1AgAAALrcvAoAAAAA&amp;img=fMxgLI*cKEbvJ3BGKia**zC0WYx8FNC*ku8kDEBHKH0Ub-omqdU9QrU6CHYL2iPZBdZl5KqdWAqD*a6ndFWIKh30UZpVi-gwppzIFVhBcExvs805y4lx*U-sZ2*Z4Pg3Msff6VPFYnKGHoSKfZXXggIAAAC63LwKAAAAAA&amp;img=fFwN7d-gpnN49zJHB6JLAHXhLhe*XdGWkZw7rLMEdqMLpXYPUaOoxC2ysVGdaLjcfl5DO6y7tNuXoyQqvqdzm1aagodJ*UTY5NltDAmCyELVjy4yCuLH6ANFKNMzD4NVAgAAALrcvAoAAAAA&amp;img=KfVrYH5Fgo4UDJFWbqifc6bzAHRnIcenLmRk9uy02nfNt42pYKgm-8s7755bKe59Os2*BZdtKin34vd6vmHxcvcLBf0FMTT2A12pcACbAkxVSTHNO8QVM0ITYOsQmUy6J2lMEXTHDWZjaCJUwjv-GnIUOeO9OSezCb8GMrfS3uQCAAAAuty8CgAAAAA&amp;img=zElRPK57Wl6sqFn614d-C*9O6j9KQtw-oRWbu0N1Xz*hTFDY6D*ae*vFAfZH7VTFtd4pd7kyg5*dtwyUMnO64pLHKuLidpj1YeyCqPSfrPiU5bRw23-ZTdzHzqWOwoLMdeNkdt-lwTK6WYVU*eZsFb5Wqq7HT8ZmcWaqy32lVq8CAAAAuty8CgAAAAA&amp;img=mp4AF2BJsgNzVJ*bmUvMTXs4kO2E8T*lnwfZkfkyZDqmmh02Gs8rKxpQ8AhUjbSoagiexp2IwTRe4onIFMoXhAslWSyZ5v5gigLxUjIkUzvlX7Y81fmCwaTTAdWIQzf*Udra7jpyghVHOzvuxa-asAIAAAC63LwKAAAAAA&amp;img=GDaGw1zZzrqR0SHVrFjtG0d-uvvAxa63R0UXSnHn27incX8ZyuBOCIa4EhRRaPStDYB3SJrdiYRjz71l7-97WFzFhd94BNoq8nAbbQNyO42Tun9Xfj-Zk6*FLRG8uKds3PSQlVWFyR7UPyrN90AIAxipIMNFTuBLQPWlHPb5aASWb9PyoxVGlC5o4dRudzXukDJgi2VqJPxdCaQNfX6OjuoWsqhK*wkD*XJhO*PkaxJcqAINOm6wdIXFeW3uKXFrc2BIAtj-O5nWspc4WdTqAtN-nT8m4d-dUYioAFt2PHECAAAAuty8CgAAAAA&amp;img=Jp3*DV*go4sIysr0oXgE7bAkMsY0tPTo5sORiDA6oWcWONXlPaWJ7o6H3cqz47ca4z*XrFtShigABd3GMbVntdG19212F1bzqRRhnLvwoqDjIn2mitPzVnFRViQyxcWJY2GgYLnh87XLaXyJxaWQ0Qtk2DCS1nxZuSzoB2vB6llFIWAYxqwemGE7dDExc*kOpbUkMidOifTnZNwIqsoXSTZTnQsZx3Aa7eH3x-mp7G4CAAAAuty8CgAAAAA&amp;img=9GX6sZ6wbyUaLq73Qzdes23xcR1QrckGvONEvqkpMTTBdzeYxd8hpdek5H0UzbpiENs-VrIFipYxKNHPN3J2wZIGmS-65R9NWdgdhZoJ-wMghrY7fzJ0u-oRRuT1KrQUA6AA8XPPZikYRJTUQfGVzHSPSjXCxIfPwZcCMinVDYYCAAAAuty8CgAAAAA&amp;img=a3W-YyraD4pXANMTnDY5Gz*UomlmIqY5nZOkC-zUUgFDGyf28I0LwF0DQ5f2HWBbfJhL-SJ3h76kL0AgtVyjFi*egW6CbxYV3hQoVU1YuQ*HOw1*ql8JjtUDOw0N54AMyVoLpPHORS9vxPJtlaHGOgIAAAC63LwKAAAAAA&amp;img=pZXd1Nlyrq-9Fj1spbzNpOERz0sMrTUS97NulYL8BzLlD-w7ktZWEM8N45xfTHOwvdUR0EcgGzY3AaOtVma4juUqwwWub-idgdpntHpja55pSPiSRwhfGfZgRmbEkY1UAgAAALrcvAoAAAAA&amp;img=i-JrYt9TFfhN2SiUb5YvrHseuDPdilqRnER*aAcyX2jT4qfxWL9SENdcrByvHae40jQWgYvYAv8uznR6kWC1g25tT-pfpvwo87nQOG9BRjOY1uaKVZlGrjBDDrXlmGLiZ8V6LcUYhOrtYrl5iIrxZgIAAAC63LwKAAAAAA&amp;img=XB0F7DS8e*i0HOtfz1cV7v*fACCv8KlBbzQ03XxHu6*YnsTDh9cKp0I4H2jd9XyvR1R-cbnK7se5goRgtG8Fsu7UE6cn78AO*fQgT3PFGiKdj62yObHIWUDdOCC-zMAuDOzoH3FANgb2HzODjfarjzDSvr5k2v7LH4tTSKGzIkbdDBdkwuE-P5xMrS-irFf4zExSzZ3tA9bCpirrGW7MqAIAAAC63LwKAAAAAA&amp;img=2yixtkuZhuO6B4UfVSx54sjaLNEgG9XtnHuI4MzFe6rIVCm0TJC4QRYDONpYJwBPjdHGUkNCY4ViGfobSBq465kEVD4Xd75K*d0hSy7x5IiIVigfQXVK6PXfR4NIM3ODI3LIH9feKpPoV*J8rnXdEwIAAAC63LwKAAAAAA&amp;script=vVt*NNMOXbHlv5C5WS1xSsew8b2CidNtvAFEz6D5JGpwFKFuiOEINbF3FUOEy4tDEqwOs4i*W9P6EeBYU2ioQmAYe5WiDV1rOCbKMX9Kev*lBxWirJBMN6RdHNOTeKlJsx3lSypWKs-oU5fKLY2OHAIAAAC63LwKAAAAAA&amp;img=276GPtzZluKLRCUEdu0HYgmGwmWHE*pcVnZ*CDZV3JKeUlb2EDFi3i0bZIage5v7VXfgP67IlRPoEwqP7tNG3Ffx7TWIT7sbIyO8ffFb3SembdIbd9*n6JUBg-Q6Ww1y6YYUgQy3UZuLeEEDluY5liZap6DnrFKaA*NZp-0-52kCAAAAuty8CgAAAAA&amp;img=YPe9xZA8kuztpvXnG3ZKxnj-2oh58ZBhajwrlalWcyS6kyE32IFFpUggZvx97C6Wh6eA5pn2fs2ptJFkW0H6Y8I8P*N4Jxap0MjQpPU0onWEEz0QcwuyvkBj8EYTadLtWOrlz08MV9v79Uk2NDdTQv*xTiO7jCmBliC*oiFOOCwCAAAAuty8CgAAAAA-199" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wZK50k183/31b522w21N/-WcRQbiViAHcagHwfb_zD8FMmPCCTchBWvQNddJv4-rdVea8ftIDs5ht5bFrMNIDNFmmU-m1zVBaJkW5x5sJZ-RPHnibu-gI3WB_z2688jr3bv_SgCvpVG3XAnfLBezi5Wbeu3rrBaWhSfmLdhadJSdXrUfNnrRhdiFK_seDIEjCWyFFhaf8Bfd0a8dym_wh0FLV0pgLznVO1C1w3yXV1vRi0pJz6Cmhu3XPsGgSrRkHXo1-2o-1bkwxVdvfoyd-2ko5f5OSwzvhV0nadZvrD9VuzuSPJc9OX-o_Y8go1P3eWMuoUuc_uKBiwLBMJrQyB3eobs6QrWRVIV7DyaczaPxABFi_gdwm-Hhb1VGd1wz9SvfhuAXrU1fGBHXbBezT22zqglDqGLy6aMK_dzemORFAhkreobt3bQN18OGYJ0TCZzVlsYTKJ-VPTfFwudABy03m6Zwm6nRfyDpA3yP4zfJ294tQyT65g2rap346iDcicrBe5KOgTW0KVczPuydH4V82SaCS1gXhYkrTfYvwC8BM7sawAepvYcY_begq98H7VuuWW88uo5BEzY1vE58EM32xTfawkXB-NUzryaUmcspcJG-Bn_4D1kt773GCwSjHRs7lgzLMUmbKGV_wPdrh8WDsjEvCMKCWaf6nWTyIJT5do3n_tKBaeDVt--CnNU3NXRp5gIfLNfxdXPNxnNohy1fy76Ety25H3yVI7gLI2Mljyo1I2h2mgHr_p0oUjz8tf4xJ2pGGRWs3furhggBcyWINUpWJxxHFWWnWeYHhBeVI2OmBCstNQv4OU88F0OfqcNarfPorvohs3o5kFJYVJ16WVvWiokZDMHbr5YEjVsRSPVKQnPU9yn571XKa-iDAXfHFgQPKRGLGLlLfIc7z03zeqkHmHbKzVvmaTiiZOidGvGzYk5prWzV1_NSEMFDkUhZqt4HeEMZIf8d1vPoT3lnVw6Y33llE8QZ48D8img=YXKFHJLiZ0yZq5Vrj3hInDRHr57caHrLNqz*0TzN59an0lcK3V3YF0iKbPuEZF8DRrFgD5egNvxBpkO4mHQGgItn2b56pgRRb*HIpiwCmxOG9P2XDujnRdnX4kR4zQyCa7FJZCiT-2l6l5RwTOfv5j4PMKhRHlcK3gPZbZYfP948bHb-9v0QVuOZVg7Y-mm1AgAAALrcvAoAAAAA&amp;img=fMxgLI*cKEbvJ3BGKia**zC0WYx8FNC*ku8kDEBHKH0Ub-omqdU9QrU6CHYL2iPZBdZl5KqdWAqD*a6ndFWIKh30UZpVi-gwppzIFVhBcExvs805y4lx*U-sZ2*Z4Pg3Msff6VPFYnKGHoSKfZXXggIAAAC63LwKAAAAAA&amp;img=fFwN7d-gpnN49zJHB6JLAHXhLhe*XdGWkZw7rLMEdqMLpXYPUaOoxC2ysVGdaLjcfl5DO6y7tNuXoyQqvqdzm1aagodJ*UTY5NltDAmCyELVjy4yCuLH6ANFKNMzD4NVAgAAALrcvAoAAAAA&amp;img=KfVrYH5Fgo4UDJFWbqifc6bzAHRnIcenLmRk9uy02nfNt42pYKgm-8s7755bKe59Os2*BZdtKin34vd6vmHxcvcLBf0FMTT2A12pcACbAkxVSTHNO8QVM0ITYOsQmUy6J2lMEXTHDWZjaCJUwjv-GnIUOeO9OSezCb8GMrfS3uQCAAAAuty8CgAAAAA&amp;img=zElRPK57Wl6sqFn614d-C*9O6j9KQtw-oRWbu0N1Xz*hTFDY6D*ae*vFAfZH7VTFtd4pd7kyg5*dtwyUMnO64pLHKuLidpj1YeyCqPSfrPiU5bRw23-ZTdzHzqWOwoLMdeNkdt-lwTK6WYVU*eZsFb5Wqq7HT8ZmcWaqy32lVq8CAAAAuty8CgAAAAA&amp;img=mp4AF2BJsgNzVJ*bmUvMTXs4kO2E8T*lnwfZkfkyZDqmmh02Gs8rKxpQ8AhUjbSoagiexp2IwTRe4onIFMoXhAslWSyZ5v5gigLxUjIkUzvlX7Y81fmCwaTTAdWIQzf*Udra7jpyghVHOzvuxa-asAIAAAC63LwKAAAAAA&amp;img=GDaGw1zZzrqR0SHVrFjtG0d-uvvAxa63R0UXSnHn27incX8ZyuBOCIa4EhRRaPStDYB3SJrdiYRjz71l7-97WFzFhd94BNoq8nAbbQNyO42Tun9Xfj-Zk6*FLRG8uKds3PSQlVWFyR7UPyrN90AIAxipIMNFTuBLQPWlHPb5aASWb9PyoxVGlC5o4dRudzXukDJgi2VqJPxdCaQNfX6OjuoWsqhK*wkD*XJhO*PkaxJcqAINOm6wdIXFeW3uKXFrc2BIAtj-O5nWspc4WdTqAtN-nT8m4d-dUYioAFt2PHECAAAAuty8CgAAAAA&amp;img=Jp3*DV*go4sIysr0oXgE7bAkMsY0tPTo5sORiDA6oWcWONXlPaWJ7o6H3cqz47ca4z*XrFtShigABd3GMbVntdG19212F1bzqRRhnLvwoqDjIn2mitPzVnFRViQyxcWJY2GgYLnh87XLaXyJxaWQ0Qtk2DCS1nxZuSzoB2vB6llFIWAYxqwemGE7dDExc*kOpbUkMidOifTnZNwIqsoXSTZTnQsZx3Aa7eH3x-mp7G4CAAAAuty8CgAAAAA&amp;img=9GX6sZ6wbyUaLq73Qzdes23xcR1QrckGvONEvqkpMTTBdzeYxd8hpdek5H0UzbpiENs-VrIFipYxKNHPN3J2wZIGmS-65R9NWdgdhZoJ-wMghrY7fzJ0u-oRRuT1KrQUA6AA8XPPZikYRJTUQfGVzHSPSjXCxIfPwZcCMinVDYYCAAAAuty8CgAAAAA&amp;img=a3W-YyraD4pXANMTnDY5Gz*UomlmIqY5nZOkC-zUUgFDGyf28I0LwF0DQ5f2HWBbfJhL-SJ3h76kL0AgtVyjFi*egW6CbxYV3hQoVU1YuQ*HOw1*ql8JjtUDOw0N54AMyVoLpPHORS9vxPJtlaHGOgIAAAC63LwKAAAAAA&amp;img=pZXd1Nlyrq-9Fj1spbzNpOERz0sMrTUS97NulYL8BzLlD-w7ktZWEM8N45xfTHOwvdUR0EcgGzY3AaOtVma4juUqwwWub-idgdpntHpja55pSPiSRwhfGfZgRmbEkY1UAgAAALrcvAoAAAAA&amp;img=i-JrYt9TFfhN2SiUb5YvrHseuDPdilqRnER*aAcyX2jT4qfxWL9SENdcrByvHae40jQWgYvYAv8uznR6kWC1g25tT-pfpvwo87nQOG9BRjOY1uaKVZlGrjBDDrXlmGLiZ8V6LcUYhOrtYrl5iIrxZgIAAAC63LwKAAAAAA&amp;img=XB0F7DS8e*i0HOtfz1cV7v*fACCv8KlBbzQ03XxHu6*YnsTDh9cKp0I4H2jd9XyvR1R-cbnK7se5goRgtG8Fsu7UE6cn78AO*fQgT3PFGiKdj62yObHIWUDdOCC-zMAuDOzoH3FANgb2HzODjfarjzDSvr5k2v7LH4tTSKGzIkbdDBdkwuE-P5xMrS-irFf4zExSzZ3tA9bCpirrGW7MqAIAAAC63LwKAAAAAA&amp;img=2yixtkuZhuO6B4UfVSx54sjaLNEgG9XtnHuI4MzFe6rIVCm0TJC4QRYDONpYJwBPjdHGUkNCY4ViGfobSBq465kEVD4Xd75K*d0hSy7x5IiIVigfQXVK6PXfR4NIM3ODI3LIH9feKpPoV*J8rnXdEwIAAAC63LwKAAAAAA&amp;script=vVt*NNMOXbHlv5C5WS1xSsew8b2CidNtvAFEz6D5JGpwFKFuiOEINbF3FUOEy4tDEqwOs4i*W9P6EeBYU2ioQmAYe5WiDV1rOCbKMX9Kev*lBxWirJBMN6RdHNOTeKlJsx3lSypWKs-oU5fKLY2OHAIAAAC63LwKAAAAAA&amp;img=276GPtzZluKLRCUEdu0HYgmGwmWHE*pcVnZ*CDZV3JKeUlb2EDFi3i0bZIage5v7VXfgP67IlRPoEwqP7tNG3Ffx7TWIT7sbIyO8ffFb3SembdIbd9*n6JUBg-Q6Ww1y6YYUgQy3UZuLeEEDluY5liZap6DnrFKaA*NZp-0-52kCAAAAuty8CgAAAAA&amp;img=YPe9xZA8kuztpvXnG3ZKxnj-2oh58ZBhajwrlalWcyS6kyE32IFFpUggZvx97C6Wh6eA5pn2fs2ptJFkW0H6Y8I8P*N4Jxap0MjQpPU0onWEEz0QcwuyvkBj8EYTadLtWOrlz08MV9v79Uk2NDdTQv*xTiO7jCmBliC*oiFOOCwCAAAAuty8CgAAAAA</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-185" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">av</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">direct_halfpremium</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">metric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">i</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-195" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1616960232</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">tmp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">t3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">is_bot_false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">img</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/sandbox-200" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">5XF3K-OrsTGoQTUMUXasmd7sj5d105Ak9fo2*XM46YOL5q77vod-yaErJUIMiHRX4An*kvzbTh6jC3C0Ca0yhO2KOdKUF8wWEKc0cvJ9q1zgCswwUPf1BYIQWRs6IWmzl01i15WEj9ElMIwxm51d9QIAAAC63LwKAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">udohELxQpZe319rqll73vyEBbH5QrHIdKIQPxo1DBzOV*MWem3d-gRkUNRJMePQDFkVnRGU-kuQ1JqRkJ3hpL6dKXMgxxctvCJMOgIZi3ldGVO6qnFHkW4ZHKETDTk7a9ktremTvMUTGZ7uU1oCvDQhJa-YV6MMxMuTI6FmbrqgCAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">nwCgMXz87PwMUTIeKUyK0pP2vnu4k9IfzcLsJDv8Q6IR8FnvX0D35NOqQAyqF8Cw7dRwjZBwbRbP7sDLDtsCC7*7Sr-jWVgBL9hj*nUyBY2XRXVq3xrzw5eXyg-AFEwrAgAAALrcvAoAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">lg6FXXBKQO8T0MzxGE4a2ZQhIod5*88zH42TgFRXlxQMZkrjocx9b5ECIYg36n66*hmSgkGVPMHewqegpMDM8StfIkB5pV1dBHYbb1QR95-BA9-ZVypOfThzoaN-pgU99QJ4yQlMzPn3lvlGG16bxAIAAAC63LwKAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">IMsNx3cB*fnjfBk6yiw6EqjI7i0y3xmploZbjENXdNG2fIRoHfTsCMCPIC2MPyII4VLD2866otwiNrPwf6urahl-YYdyDqHwLgFSBoBl*stQHrcPMF3jmePPUhAD6YoV45qukPxzIrFQnRyGQE3V7IA3sjq34AbpKTf2*Gi26T4CAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">dTMVJTSOkNcIcJC5v9MwtpkWApJfKU8D9a4b64RqU4pzXq0cnTIvvUBoQEoraejv8znIQs-QFGRMBPLGL37vkiVmgNjsH2a99qcbLZHcln5AzrdRjO8pfeaTBlSKuORGhIHW92gjLMX0KzVaWeW3IgIAAAC63LwKAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">F3mIQNvnCXL2xPaXUoKbW3wYOalpC9a3Jxff8xNg3W73rcxhffts6ldW-bVKQpf2NuAGoileeOT6beDHwX*r5UqoNP3JVYdtLL9i2RCEuLwj70fZGNM*Ym6XX8bSImCi6k5kWiXZ6f4z60qkklvWkJwiczG456XqrW8oGobhvP4WVfDDoFsjkE8-izBRnMCFAgAAALrcvAoAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">HyGNnnaoua7HKCUtpSYyUrSb7ML0M1v58cptERPXT*1QUBkdL8ZiI2FpzMm5FgZk1cl0CHAcjv1sWOE5mHWmL56Lu3HVV4uA*Rr1wMoGwyz3Z5zSJVbn3tlbegBMwkeVXepfXeSMim0jhWPLsD6iAQIAAAC63LwKAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">zaT2hvnoeu*fLpjIRuIyyhhNSKsiqE3-2yAHp4nB988TaqGlDiQzEkW9WzGnfL62x9Fd7ZFbRyBTR7OJmtyTyZ8oaEMOdw*eeYpI6MeEVpyokxETUNZRh3gMKV-042ZklJ*yLY4JO6xJFq6f*WYaQoBcmhWVGZbyZx2CnHFzotICAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">luMQIxpFFXtmemtsFAXM97EcuITMHQT9T9pv43EctQd*vk9eRYOSsEvqMGbeBlzD**CuFQT9fub58O*I9n5niaCv0YjPiKR8iXEul13nB8zlMTvmCKuDJn1oXvPs-kB1AgAAALrcvAoAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">iVMvQ2SWrAmv4ceo8mCvybMTHgodNDuJDPsJUTwVWuHSpM1rkb1bzwxJC6AP2rXZXsvqJ4lKrHpBzynEWZV3UwymJOM0JbQftAKzGkFb6jPf1if717XnPPms*GxY5ArW4n92XKB69IyWew2DrQBIcao0Br8970X7E13RVV175o56N4IJPHF4Rh1wcQmLJhCsrbN6Kqdc2qooM23ZOxwsijb5FEsjpydRuSrSJzKP4uYCAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">TxFXFZnDmKQUaqAWkcj0Cw39U0yw3*B1lVHVJUPGQSTtHLZuca1TCeNi9bVf2l5h82jyaX8upWPk9QElpTdUeWxEl6ZXtH2vB00FltcE880w-0HnWT8nCiu9c5vyyLGTmPkMCBhZ9zDAj07Qdvjbj*OO7PgYCONLuYA-*UsW-wUCAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">fFxauH9ykCVzCzZ5TQgc*pgZ-bDKP1Lrz-sKyoxpYS-iNoQupwofVr7FRC0JAfUV2HNYeYTM5l*yPOQVdPfdzOWtLY2Hcl3EuLqJU399og9J*PdEQ*3wJAIjtFGQaZU99SdxymihtC-brMTUJ*chMA7TE-7GhAnzMieUKS4SRKDK6-VwPHwL598BF3s5ZvsHdZVonFoWTXt83WSo5VlRQAIAAAC63LwKAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">B-9Vgzgl7YXL0QaO4kO6moJ3bTDl8EEqkDnvxrF*iLyTMX28H4aVUoc4DB5X0vqKvAIJbx-uSEExbn7QLh526JlhR-DVeSbZCrCySiql2aAx1DfktAEivXXWi64rrokgTAgmDmd9*yVuTwXpOoTPbthVsHdHb3hTmbLIhADUXaICAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">269XiAy3otnsXBfcLKOLjauIQIJZU-ODlxzP5GRCuUrkF04O8ussTgEbzTIZJHGn8UrvzxleLfKkVHldrKJWIoBl0dyxOHXtyUhCsnGGnC7iFiuUr0ujkdBhIXWfz0aR3XgGDpoxFmbXFX8GJvbiQwIAAAC63LwKAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">x1xg-fgkjN8Xilx1K0iJNgZwdSaF*pWEFYpwLa97o4oRwpe9xIxoLeFpbLhkkmuImEXdkjUxJksHTTKM-0TC*CyS0GxTskhIx2vROpJnI*lboQ8IHHz0Siv80tlNsibyXzmHtTAiDDL1ihzaDJKsXAIAAAC63LwKAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="script" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">script</stringProp>
                  <stringProp name="Argument.value">MaleGJz3Jr6tS7rwAT6CZwB6bgSKsYlah4vpR-IXSAdTDsZJHXqNf6hZtamWFVmKwYW8S77k6hagr-r2TQlZEWtTmec0vtvNhFUneMqoFNbSeQ4FTAlP0pRxBd7GwV*yeTc-0HcGqDmRJRXbasWlUgIAAAC63LwKAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img</stringProp>
                  <stringProp name="Argument.value">*oPjlPouSaYthyUg42Qb4agqPxszMNKrifZw4Ojh*8KfOzKIVqoxo4PcP5OZC2wYJhC5zzrT6ePirFG-WYZgo5v*TP3*saY8uc8idMl3jaKFbxVG*CqAEk-o3SPF1aVHmiZ72bBL6xs*bWC28uDVupmf3MCAmVINcwjqrZSM90*9WFxxRtJJP3P5CeEOz5zA8GiUcBaDtMo4zzA84qvHoHDSZeSNztbqSXkTFeMOOWVD1qlbvYOXeLQII6ya92atQWnrvzldXmGGT6PKbSN9GbghWVmOJ15srI7iUah1BwwCAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">profile.ssp.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sandbox</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">iframe</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-197" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">aab_none</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="st" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">st</stringProp>
                  <stringProp name="Argument.value">1616960232</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">aab</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">none</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/wZK50k183/31b522w21N/-WcRQbiViAHcagHwfb_zD8FMmPCCTchZWvNdNJhgiIrDS-Wic98FpphkwpBzPooQe0alUu6rhlABC2_G88wpSsBSGG-9oOk54WBd-Eyf4w3HZ-XSvjLMaWbkNl3HPd3gzEPdkUvYAZ-ecvu0bwSXNjRgtlzlv6J7eDpDwfyLKVLpfT57gp33JfVtd-xYl_8qyXzC7pQy1ElBxRVe6DrJwPV3zJVH8QicsnbhiFk_iTIEXJZVxYa1ank1edHjrjFy7ksmapqn4RDKU2HPeor4Kt5Sx9KPBMNnQP4EYPop3s30XOavXsspk6Rv-p9WP60GHXeWfOCWoXVhP2DB6LYndvpdAGCngM0D1U544GiF3CziUe_2tgH0R2TjDEzBP83gzHLjm3_hK56Da-CVVDCWFw98gEvOsrFEdyxY48OFD0nucT5Hlr3DBsNPZdd-of0I5VzZ8acJ0GRlxARC_wrJxthsyoFi6Cu9pW7Zl0wonxohcrN5-KaLRmwWWOrjuSFq7nIdf5WR0hDfbWH6eYPwOsVW0vCvJvxDZd86TPon_s_XYMOhfvUgu7V0yrlbAo4zNkGidvm1mVVdK0vV-p4ndO9HNnyHt_Md92tW00i__DP0ddX6jwXPcEPiPUDcFebY-kDJl3nvMLard8yUaCi4HCFgr1brgZBRbAFN1duODnb8eDF9uaHyBcJdfMVvo_wt73zZ67MP7W9E3hxV4AL45-h58ZRf7jOuhnHah2koqzQmerx0xLG1dEoeXtfInw9TyWk1Qq6K5wvOeUXBWob0MNRY9_SZCc1IRP0ZdMsZ2eDwRtKHQ8gHjrBp0pFIAYU0P1C2Vd6umkduHXbQwJ4LUOpjOHKeiuIe_FVK5kiF_yvPfdLhsCXNQUX0OUzrGMnE7lLri0vJOpKGZemrbxWvCDB_tk30lLd2VjBu1cOJOlX5ZRhytbLFA9d4RtBMl_gNz07M5ZQj6nVR6R97wzIanket_id=3396%3A622&amp;pid=85&amp;ruid=pA8AAN9Js1eIZSZuAQYXhAA%3D-201" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/wZK50k183/31b522w21N/-WcRQbiViAHcagHwfb_zD8FMmPCCTchZWvNdNJhgiIrDS-Wic98FpphkwpBzPooQe0alUu6rhlABC2_G88wpSsBSGG-9oOk54WBd-Eyf4w3HZ-XSvjLMaWbkNl3HPd3gzEPdkUvYAZ-ecvu0bwSXNjRgtlzlv6J7eDpDwfyLKVLpfT57gp33JfVtd-xYl_8qyXzC7pQy1ElBxRVe6DrJwPV3zJVH8QicsnbhiFk_iTIEXJZVxYa1ank1edHjrjFy7ksmapqn4RDKU2HPeor4Kt5Sx9KPBMNnQP4EYPop3s30XOavXsspk6Rv-p9WP60GHXeWfOCWoXVhP2DB6LYndvpdAGCngM0D1U544GiF3CziUe_2tgH0R2TjDEzBP83gzHLjm3_hK56Da-CVVDCWFw98gEvOsrFEdyxY48OFD0nucT5Hlr3DBsNPZdd-of0I5VzZ8acJ0GRlxARC_wrJxthsyoFi6Cu9pW7Zl0wonxohcrN5-KaLRmwWWOrjuSFq7nIdf5WR0hDfbWH6eYPwOsVW0vCvJvxDZd86TPon_s_XYMOhfvUgu7V0yrlbAo4zNkGidvm1mVVdK0vV-p4ndO9HNnyHt_Md92tW00i__DP0ddX6jwXPcEPiPUDcFebY-kDJl3nvMLard8yUaCi4HCFgr1brgZBRbAFN1duODnb8eDF9uaHyBcJdfMVvo_wt73zZ67MP7W9E3hxV4AL45-h58ZRf7jOuhnHah2koqzQmerx0xLG1dEoeXtfInw9TyWk1Qq6K5wvOeUXBWob0MNRY9_SZCc1IRP0ZdMsZ2eDwRtKHQ8gHjrBp0pFIAYU0P1C2Vd6umkduHXbQwJ4LUOpjOHKeiuIe_FVK5kiF_yvPfdLhsCXNQUX0OUzrGMnE7lLri0vJOpKGZemrbxWvCDB_tk30lLd2VjBu1cOJOlX5ZRhytbLFA9d4RtBMl_gNz07M5ZQj6nVR6R97wzIanket_id=3396%3A622&amp;pid=85&amp;ruid=pA8AAN9Js1eIZSZuAQYXhAA%3D</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pv-194" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rex" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rex</stringProp>
                  <stringProp name="Argument.value">1d8ee515881386b66f146888ec64f83a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">av</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="block" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">block</stringProp>
                  <stringProp name="Argument.value">direct_premium</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mn</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pm</stringProp>
                  <stringProp name="Argument.value">metric</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="i" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">i</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pv</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://nova.rambler.ru/search?utm_source=head&amp;utm_campaign=self_promo&amp;utm_medium=form&amp;utm_content=search&amp;query=%D0%B9%D0%BE%D1%83%20%D1%81%D0%BE%D0%B1%D0%B0%D0%BA%D0%B8%20%D1%8F%20%D0%BD%D0%B0%D1%80%D1%83%D1%82%D0%BE%20%D1%83%D0%B7%D1%83%D0%BC%D0%B0%D0%BA%D0%B8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/file.jsp-204" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">*iflxPeY-lptTZcqCJSUxVIa3wf0e2LKUC84wKUzkQjk68FOhG6rllqeHkkfFjjuO2Uh4EDDqKPUXQDYC5Im9xTkjobLWvDejAhn07oIIZ3j2moIiTjj*PM3x9IiFV4xmLD4pKjcNCHLEulYudxa9BwAOm15XgbgWJ7LWsxW8cB1kDTctXkaA7LlIEaeSDD0cCMTZkFpLdyhzENsvINZ05tN2GK3CnLdeTUwU3b7xYUST4OAgYgrUd5sTbna4YIXfaGDqiwBQoBKfsWB0j1yWRUsGh0gH5e9UnujMu6qZI8KblwRRuy6Y0zZgB9lbp8*f4D6gzyw29dYlhmgQ7yiH4n8fRFO4cd2gm8xBzHuaAm*ORHGSXOgOsiGwsm1KPQAMYdfT3drRBmktSj13or2qGxTAgl*wZhMU-fVPaixTUwRjW-wTpinyjCAM2YPFnkwFpxzZRWsXF7Ms1FcXr7gYSmRRCWNfvNG1glbsXHn0*ugtENqPffrArxDmq88JRiA97vSL1c0mP4TG*NN5u4iT6tQjx*Esd3TlMEZCtlHpyMgE*91-uUjlHMO4CQqP1tlZFQ9kciaJgfE0MFNIktOUbaZJsGhVb7WsyXUTSHqWPrcy-IgL1r-LCVW4DKZsQtlj5Ku6slIpasj4bjbOUd0i7b7LEN1G8T--5mJEAViR4YpMQSQJYgOl8NeyhFuRfNRdtXGAha-O0ZW2KhLiyVg1TZKazD1*Hw2*VMyi4CIRhjSTIwVruJQqC7dUPR1mQlMDRsTykx9nzVEBM283OU4c-MkKLeN-zsj0suFBeMMI9P2QvB-OnXNQiAYRmb2PDOuSwBpQ7lD6Tz0qe0k6Vkw23Ch4E0RZNmYXhs3xbZRduZRs*UaWm17CUAdVAPMxus6DxPjcG3UJr3z9mV67wExVq0OKARpCAr4*SIrc-eT1yXUrWdosd7zB7xsNsa17751nxHdZtkrlkoXwpkdUmuNubWiQplKJpZSH7Zezwt2YfdPUjpEjsYqLhqGrtkIr8tl2390zkuYw9iP8ik82zXeB0X-sfKRqpjSgeBgAibQM4UnnrVQpm8iI1ZrLJ6VX2cwyeM74wkedywNWtHTPyIDXhsg--d82O65y-ldvii3IFt-*pqnRsNxRT0ZJ2*VMXpwLfI4c5RsEFKwmFLG8SdopXSgKUNaxeEbQvZrSUfIuvYgGlj1FY3R9x4-W4Qkh7P4mtRlfT3xzFypfzjOXZ0gcEnHnacNQPQ91yZrv*r-lXKeD1dfdZQR1YE*9LR6UvUfci8mggoBkfC4iEIr7IpChqMnmtwGCnUU2DKCcDLK489wgL9UfYzFe7dHKlTfu*r-4uDH8Dyk*kOix*E3MRqQKTo9Ons2vqjm9vby42ZYQwlFrXil2b5SAlO9E399hIvPYWycXDhVTctEg*NwplayR*FWumXatyDRp3HVCAPy1YiInPXXhethMjZJ044PgOQl8miFmUjvn-E25bkVADBnjt*fWDdb3O6Ua23QrvMXeMwaD0QIgrBEb67U8a*neTccA7jYwRr2Cd1EwP2uVFxgLgWbJe7pISa86d8JvCe8zR-O5GBWginfXP4rfQ5fShLa2qOJlJQkYyfucfCGjUeQb50baFBGEnV9EoWQol36s0AzVVl-XxdY9LvJH*UPS6e3PRr-xRPyWE2tz*IeGh8y6*0FPBNun8I5lI*d0zsEqj3C8rrO-rb3Emu3FSwESOBiYUgSSohqUU9JFuYivVKtGZ-x0OYbPfqMwYu0d3eRbKHKVBsoFXqnyj6oRDgRaOjFdQDtG7US8pxXTbMQ1BgyBk6BInQBGsWif8xZ9-BFjy75B3cE-UOVgNyiB5G9-5s8RpVHO6OKXtWpdug1lXiW*e6SO4n-jH7DHfE5G*eUO9rmIquygV7gNdhMeHL5u48XZU4Xo3w3qT90vQ1SSdkNlO0Xg3lUXwDfpgULnCBIvu2OsiO0SG*0uDRwPox0yEBccV3Gi7YxfD0v1nPxOPVxFT2qB3oikFi4-M*uklmygNWXG-gSec*J9*CAzO-Z4jlF5Bg4LRrnSxD2Qt1j3HSkz5-vpnEjiKFZ*jXIp9yJZJEYd0mGggY8CQIfclwDWimibnjCnHXP2x2aO4R6SKMaPZsUeQ4I75nSTLs3S0gEDgWnQpmPcDCbFISVapboTgDIFI-L2gp2zj39VfON8Hy12iJ5hj-zWC*dHB20m*kWCwCPDP0KTnBsLJZmtxRI3JctSjMNpDb5v917iuG3qISLDDxPQX7DooclQfS*BQeos3OqhaaJMcSHRIZVrHKbRhwlfVZXBu1JsTykBv1fOO38foE1OoVOyYiSaxjwDvfbKTcwVGfexnIa57pDaPHBpdKvrRJEuZRhcrPRvKb7ILpcHyW3KX6hmCn2sVIKtI*X8Qkqf3TP6Dho2Ld*gSUUQzLPKkgISodYhOm83tfsZO4XkZ6OxrqiREtI4DrGEwWiD04y4x8mxNpIgGq9nlkXWE*UgcN8-40wPwfQYyuvFNEPaMm0xG8cFUlMJwodUwr0kGT8pBYqoPeb2mHOowZo5iBzJp4xIIUDMM9oWFPrVdwGEffOL*Y3LepGhKV2U7icR-8obenGWh4PjAEV6XuY*Uo-TSAuCyzJyfAMXnVC*hWq*vYM8z*rhsu8NJwH8g*F-S2RIsVCcO-oxtZUPHLK6E17CRff8*-XFaP4x7ItrWBrg-377zaCOBwyNPZkRx4rUKHTRMDZcMg8doF*n89B0BtmhZmS5ovWPf212yGgoK8HZ84DRBwIEi28M6yyRZfoRoEGh9g2gLXm4JSNeHOybLpwv-mYFriAxNMSxCUunfFkQb7jF8C7yb*MK3l26Gp3zSbxokfvQLmGAH-inwM89173oMvwS0DsK8N-KHdhEEhNngpgbiVnVkUV9zWH7Db*dPhxxWN0YekDQWv89xVqrbATqZxzTC2RJJQCQ*hePUlxhP-qJM4fZfZ9NX-uciTbnmf6RAfucSwutR6s2H*QdfW3VRzI0iUhaWRitVzois8VoaZKOA0GI2uCVMfum7Byol0DzZmmvEIcTmb1ygGKq3d-OxtrtiLHzySJokUeSdX1TfHvLVEBnD9*U9u4TdeIwkn26B*1d4HFf8dcii6847GLOf8M*kAOhIHKoxiHWDD46dFtAgTUvR6BNiLNHt3gP5ijkPa6jwWsc50nV6FOWfzMjzCX5om5kIQBzM4994eHe-5KDNKIL7b*6b2hof-A2MoTsYydDMxSyz2abWsuZxpzMS1Iey5Ho3IsCz6x-0IQ6AlspFjy08hf7Ngkg7MJcPsXJj6Mbs0WQniUKOwozHheOYB0oPxUAKPt8cebYtfJSPId3rsiWLI6IY97Fg2YjqQcgrMWVJ4zMvjP7ki*EwmPZ4hzqwL38IdDQYVDgElqu4J7UZn0jJH0ZO4bcpVXY5ey6hCcleUsuP-jaZZ2FsYT-bp5Ru0mDKmmR9VQeaqxPkZ5Xn1lLRATWYS-jjGLi2rsp*0b9Zu4gA8aUmpciQsbVhFWtgOOr8rilbFMyXOlMZNgaPjqfu77VSF*rioDdYW7o0hfNSWpQv3I3mSBkVaYVcHjT479csUczFGD3SSpxlqqFp9nvohgLr2Lv68z2-zR1*7-y-onG8t2lz-QGpZoUwdr4MBoLBHyJzx9yuVulDC7fG2lJ2FW6Atq32*1qxzKyH61nWNo09heomuaD4nmISIp1jM*fu7MVVdCmfBhdE7fV5ZPUR36NTWYX1gMZ-0CAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eurl%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eurl%5B%5D</stringProp>
                  <stringProp name="Argument.value">IrPdWn4j5pgj6d6LIrhnTmVlPRyah8gxe-SSLOt0oKYgY0TivPnaTZerOdOTHt9Z*1s3-KQXpcPrZTTEI0eN6-zcl6UEUCUATzDUM3J-pkO8vSqTTr5GoGJX*jpOAe54AgAAALrcvAoAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="capirs_nocache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">capirs_nocache</stringProp>
                  <stringProp name="Argument.value">1616960189747</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">img02.ssp.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/file.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pixel/628034585/-227" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">dN5JEOHiOroTWwCPmj9jJZp4OUxPqdzwISiPwFkk5pPxbEX46LAdMllNUnDEQ7jeVnMfOl3e8yZgaXZ7D5iGTGMy7-3z6PDWrp574xKbcOJoCIk*84gpaMC6OYf7jlEiVDzAqgH1-TlEG5*i5OUhZRXEFejBVgy0q47rQJc7r7Rt3dU-x0Dcuv4uEsd7rVSRbMXjPgsvl*QSl10xbQtRnTx*fef8GydPU*GTkjh46132IugAub6YpS6m9I*Qedi39fTYQVHNjVhMclq*yeTwF4SXWoq1I9*MiXSWvdJieYuq81ygXsFl25HfW0U0fygvRaBrOJTx1ubE*7ctpOhG-t5Oe4cjSbpBQFWEFBvF*KGoNRBsE813Iej4uCG9fM-iee-EInlYoBBeAL7NniPivyOjItnAWmTxrE52ft5C7C2Zt8aztC3IrKqZYVd*b-ixqp88o9q0XWBLFOnGuYAxDBBSbnUzw0imHVl7vjojK6N*w3dCat9TNd6osQZQxd3Fz9mjDMVLviqD3RiJwvQ6gJpqfk-WC2363DFu6vpao*8WJWcnSEgyEJdbbUheuXJNzNFFwA1FxkNJ9RAVvUhrzO*f4JWctjVd7I5W0GwNjUJwt1lcWNIEeVWiu3l0uPdIWnJk3p*C4bOJRdqa4OubisLbM-vBqLzCSgwryEafwnKRmLxJ0NITC*D8W3BH-g5ZrJ12LWpg80zYuYOdIjg78loD*Is*6hIpVsIWLhbd521uH3jljsPaUy0kS97q4dglBiHHQtNMGKJEMwLhyoki7oVYlmPw*9AAzrlZO*QwT88EBQ-WZcUSlLHunzuZi4RMZcYF3P2faZ*-yKMptpay7E*c-cewdYJ8vrEKpUyhDWfwsopbhprqPFb*c4HEHpBmAPlNtCpprBHTTwsfGo2eoI6o5pII6UGrOMgqXFIPieWw4qn6*9oBCqd15CuiA6iyzMnRfT1px450P*C61NGHIBVkP1xWLNw9wsBbvulSAAg-n1JcsaLywBbH5bzwU-92gebCLRa7vD0pCN0QOghf0To7bTv0jTKIyehlUTPcATA-bS-C0RnS1nrATMhFwC7m21CLdtHEU3r*0GFUbmphSVZiwgnPa8obOnOC59nR6-QzRR6vxyOmmplkHcIKQNJJbsXV4z*6qyPj03IeegG6OhkGpiV8v4nhmuqM3M9g3PsuouU1mHXISnEV3-UCZWVBdvolUWfiDr08ULNAIkrdrNwqO-HgUAqPKzVi3ulOwzqUXUYBHF4Qwb18Af4JR-wAZ*zZN0WMhsgpTTA-yhSbV3x8Wmcvp62iK4Y7XVJhoIO0i1s8QeZl26wDkk71loKR*MyxfHx58isUGNAURzm-icmD*eD6tIMDi-UOewZMrXYy2-YvCEe5-cDYXLXFkaBD8seCQ3xdEw5oz64nAN1MTsRtgXktU00LFQmMjBkt95UZNFS4FrnhWcH7swc9zUApAFAKB5C6QZO9hqGozQQ0wBiUe1oy8rzWFYnVgA7tRoTNvKkY1uSiuc6jmZYFpOpOD1Y5gDjovfg-apet22ma3FAu8v9hOg1zjna5qTv5ci2mNfOEQH2hLbheDotElhcqcgi9VfvGFWQiDRZXv22RyC*uOjuPQkl9KzjSh0Zl8HRPC9s39mV4EDH8byih0oUeP3Gp8V0wNVLZJzaYhH2PmQYxVwjTum52fYjgkOTMwIeRxWwxuTYq55JomFODzN7cDvskBwrrEksdLHTZ00Uqbgh7FEFxUccptbZ2iyk-SD0CAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cost</stringProp>
                  <stringProp name="Argument.value">0.00</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">dsp-rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pixel/628034585/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/file.jsp-205" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">y9gZIveEnk*K06bqaccKJ9Ep-IWkLvhCsG0*0Xa4B-no-RgV*HBGn789-kaS9Ae7TfsKWVZpI5xgMMzNnt9KS4pZEOskaKG0rZ5*wckUVNUUtbIJcCWN57WGVbpjc7DTbAGe5YFxR63vHtqAUso03aej99uvGP3NujmPbfqXh6jthti40NY2skohqA3-A8Umu6J0J*cUrxlYkSsdh4*bmzWcD*5GCICiE5pWA8d6UGyRVs3wTAsqJLHqtKLyu8Ipl0jqKCu-HBe*7uxanHg9GNIt2QnKX7M4r-ERYTiFiRrnn2g0DAuAGtBtrkH9f7wu8wXR2DgfOgDn96YqgMhFDcZj5ITLkjLUeZQiW8NwwNJhQAxLDfscaQaYTpwNqw6625CCTjJUgGSGfD*Ih00oRGVtB6Pneg*JKKNYScNsScCpfkGCBCL6U1l0iPgJzzG7P007Ol96dCyrFFoj6eeTgxmsxYIIzzz8SG2FQa4-6sbkpbYU*GV4*8Vu4nQgGGbh*hiNTtDrHlme3SfiP*XpZ*nXxrJV6jflSfCVvC3BgkbFB*PuDIPoJ4dqJIcKaDOBEwKk5dQNbMuF8mCwy1EuhE6cUwuwTi0qIY2EEZ4BShuL8dYKtg55*LDvTygiMidLDx1MZiu53D5S8zYDaVRX9kGCYuWMwkrfXIPEfuJNaC3S0h9dL04tdz8NJFrcspAl9Aw9plGLF3Ksn44gG0UGCySoZLtJ-*b7JFkHBztbNBuUsmkAHd-ScySV4P6j4S7ncSJEnM--dqqrAw2J5EVrKKHkEcsUrxIE5cfzA*wafJSUhST8SRMWFWhxjlvQqAEwaDAQSsZwuyFcxov-DfhL*zSDnc0k7QSoSPRgAEF5x8CR1iKaWG7ufvy6*ZBncDYLCDMc*yyR0xm5ZPuHoZGaD8b6wRsBXc3dBSYb3o3P7Sta3Kj2VCYpDGAwtT*FznR72ClAgl06ybt8OfANk0t4VX2n3bu6Qan3Uj6d0vUkwpj7ee4SukWGhpOK8Zv81lK4Id70RID0e-iKoaUjTc22g5OZ4SIUSo9ziRJgiyirMDU0kfWbdC4Gs54Bix1odESU*1NK6t0sco*u13eyFN5Eoja6xf5bxTMsYAj9-YnZl6XNnB-iZHXP7Mfq*h-sfJbLsMD5-wsHhcLjso4wj0RGVyvbgs2aFzWLw5NlB-mfrKJvXjzK2vEzMWBFR1DadpUj7b7k3U390GYNMGTkXlbh4vjrKVKZa3nyuwvq2UEtdDryPwPkROalVJPb6U0ZY45LiJd3pZbKgVcJoRUUKB1515aq4o82W1zCir7yWppjLIrjf8l57n3m5rjPVu333XCE0m83AeinN*XZMDMzwKiFWt9Wicz7dDymgBgTIu5zpDjFm*exGCBUh0aKU2RKUhh4SqoNv6XcK9Ecqg-paatD20nmWl0osuYxYYo04LhscW8kGrzuMwnpahobbizcZ5cBOpKL8AYAn2JMHIkqXcv5NilmwzFNTc*YEbEEE6zzeUll6d6khMiU0xOlOZX6U3Vo9pB7Ib5y5kTpEeiDCXHlFh8BwPKpsxUNCKDPrUqLvhn3Y3qVTmUkbHPV07aPpt8BAothmrRijxBemdEQvwos9lZQNBc6fWnmzPRS71cWV2Qpf8-zSJXIBuLwIzbQ*XaHBU*TXs3KdCt-n5ipcaYyrZzUf9qsCE4yRz71BzKMPiHUNWnHNxG*9XRG0dRmEfvcWvBo1Mb2gyNUz6kLtM2R9WlK5m7Ru8A57iY40KFiCi9f28QqurWtaFo9485Vcrwj5xqBD*Kxrkxe9bN2ifmmxT4-bXdYQJz*oy*HUA8kJh2m90kxB95y6I3NX-V7pC1vSWIZh6qvr6ofaA4n1Q5zXOUfzEkHRo1ffpY2m2y-WPkRwz85MpPqTcov5CM-ZUQr1AUlgQ3XxsFv0pOXEPGJ2g5hJy7plIfJzPQc9QyRpQmKn*FqbaZnM2wBmwdf1miw*lCgIzi-z3O*1NfkO096Sxo3-7lhhnZTyKISCId4pjoR1NhHwOutCG97X3dwK7GWlPOUjBNdVaildkvak1hMI02XoyAaOqB4eFPUa1ejVbJhpvpl4L7gdJfZvw0HN5duKENeibIMYPQ5s8Zdj4OT7CA2mBwPxEGQIqJUvsQJth5RlCKG2WmQFTbo8K-TEzE9XDokmvIIhD*5-pRsQcq-HfYwDpGXkER9yHXbVfWrx-dPPgXbvwfE4h2dWxe3oDlOdG1OoO2gTQHBALoX-yTph2pmEm0c0JpQSKlcj3ZsCQaGCP8*oOEIxvN5wJAxahVcbJERiscyJ4Rt3TO0pW8joWEdw5YU2AXFaJW3RUZ78I2Z6bV-Btdzv1jsyxQe*9YgB3Ib-9FEerFF1S8wSolq18UxVod4Yof9TdeQ*IB6zBl9xrjPG0sXqnX1JfUImUq1XKjuVHhGhXGDdCZ*BDfIG6N8uGZ3XOE7dq7n1XzxXJ2ZtJszLSxuJGL*qhwTsEgniwnJbFHhOv*-dCEgq*PhuPK388A7PzKD4hiPqojZdcLsFQ9EUzTTBoj3oXcXSHsx*zXYChJ8HAinkAnMrvG4ch7h-ISjtS*lF9*U*NOBCfOX3kinFmPrnIxezlF0j9-4TDSWXLZZyYV4SnRC8Cq*5xg2*noxVH3I27N4Xq8cpxJFBX*sED9ku5s7PbkfoZZunMP*k0uOEWS6hlf4zhQ36NC-Ung78FJAQlMJl2haGPueVt0dXaht-ysBNLKxHyitGKQzQC58JnLh0EemDQKhIPHBXfkIfhhS1KGxfyRUGHHnRi3J6hEW*g92HVwu2oLgGiF9zIlg1KuNj6YEYJ5T2*RgrBHqu3o7BdwVrHlNlqL4qwtOJIO1yBSUu08y3Voaam7O5OngKuOZiuUUqGmlZ26VWhV61UhjM47WyJ7RMk8hQHM1YHmrEljA5a4FQq6eV*weyBACX7tV0H09xldy5xhuxvDpEiMkUt6UmcwzeWZWOjt60sDxMxLE1Y0g8MPFNBm6CByklNsnG4n3rBHkeqEpBWWaiAzgDSkmekVSMlP8-qrcn3f1ll9T5FJzXZOLS4ZNqAJR*Bdh4x*emNB91Em2lWv0ysQgsLoL-ihmKQN7fiQE2xGvXlscoS-SKIIlyLfGnpgi5P5RdeFYYTPfcuwDA2Q6Vpkssnr3fnJLuHE1gr7Ml6Q0w*soEyCHZKP-I6sFe2RUL4R3Eq9YUrGqUA1oX9G-NWTJI6jFd2xI6mRStPqsRCqSy5f4DUoCVoV*nduaRQHL5CzPZZxSU-X1vOY-ru-XCTQks4FZG86Rdq4pydMDaGzPDGx7BUkaZ5ibC2pC7*1OHkPAyO*eaSOMpm4HWvpmmPRxrmkM*Cxwa1lIwkZ-nJkO-AQBvRLtW0Vk7ymupNU*BP2BYa8SiRTH-cdZLAwMYsDtIRw7S41q9vl3u1trKnJ55YZnO3poWNmuiqKocdvvTe70GPC1a8j283SpI1EzCNFTHrtIP-WOzCwaXt6Dcw4QSA0spwS86DlF4KtZWlKcihdrlbirVrleR4fNQdF8UumxT5I6gwinrrqMu0X-SVcTceCLjLjF5cRmFYOV9eBThU8XUmYtt85xRvvWdcXWizDWkroOWzgRllgszDFvhLH2pun7tXe8-vF8qhyphSw7zSuD6FvrwY5vTwIAAAC63LwKAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eurl%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eurl%5B%5D</stringProp>
                  <stringProp name="Argument.value">KiE-hY2mw8AJvY7ZSnY*y4jFY-jUDol98pcIoiA6XwyeujfIwVW6AQIiWYs9hA8F3FBdZnwGn81mY*D4T-Z0kFRzzZQzlfHSLCut69qgolJtC3aeEmgrASAJY8a*Cp0PAgAAALrcvAoAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="capirs_nocache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">capirs_nocache</stringProp>
                  <stringProp name="Argument.value">1616960189910</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">img01.ssp.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/file.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/file.jsp-226" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">-NEHnAzcCgJyEcK8AKq8PFF4HHpFm4DCodqoEbKhyz4hoikrL3pYnjyKgPWCG*koypvca4kMqW9rAT90mqwZBJQxVq0N5Wpmi4rEuUiqgoh4tlvT*ecJEt4UU4sk0fkAxblKmmM6qa9ue897a6hawkL9KcnT1sZQGj1RcvY0AUdGyU8g5aR16pfR2wvEq*oGlcEG8HuHyB64uX0XNbwGm1zDDSycJ5RnRql6SdZJtUczzt9d*v9sUGpW-1HSv0JKhx9HkHHrn9lZy5hL4gOhTg18zg1grGqYMnsXoKyJLF0m5bpPpxTP3Ervz48ktdnoyunfbIBIO0nuVvAjyXv7RSBDN3-nvfFdZeH3wQid0v8LvT48YyyLwegM4SUoIH*VPoVhqCda-KypUJaXUjcNP-9GDuOmrpKFZ3GgCxaMRXWPXNcdHClx0vePN7ZZnemIY1aLQgZF89j*MtQ4p*zkA1dRmvJYsNqaI8ThGNgWLB5lGG5n5xoal*SSRd5HNFPHFVv012XwMaismlEsJueV-wbQcboTC2IEj5eLBQXuUA-vDFeafc-d*aXzJsjapbIuzQuuxAqxqitda554zObkgnWyBjysa-5cyJU-Ijn8wdvZb0wBRLTJ2AZbIqUpay7Z8wmCJNhF87h3LUQxhCCdlMAduEaZgTVE2phqmhKhsVpnABYzZMluurs9C8fwaybF78JZjm*fKK7vpcpeByfXAc1-JnC2kjtvSe8X86-hHG5nLTzUA3hBVhanHUPuivNlliDPo-9wTdidvS2gG4hGEsoTF6EydodIuz1mA-6eGfaqGkhNAxXYCAtRugV5kO2RA2tR*Q9iBenjnqC5Q7-5Lc6GXirWMnyT6Iy0gyMEnl6Vt2OjacivXv9PNLftub5EBOWNGuWoYI7yrlmWq2eDZ4msE0trnAbhVvOiyWqcG5pp8Fv0Iu6rdPqwvaKhpCuci6oe6MDWXKG9tUjIisbhRc5qFaYbYL*H504yxdfyrWrQH3wLOeq6vyvLnmKFvUxceVXYqQ1vaXXrRIDXg5sg-y3iaMEjF3mh6L*LtYWlI9tjGCol1uh77WJWNhWKCJ-hWWIVd0rM7P6irA6MpfuGTAZmuaUs8D-Sy-SyJ1hlDm2gVV8syZtpm1ffOJJLDFFUgoXN4SClu26jOz2DBFlgBHgyryWG8KvLnCi0XqzvvxdAE8A5aqdsDloxCwJgptulVkVu-4X*pXPbP4CeXeSAW2wtVEIQ77s2PW67HhOmpAYudpCVviKkdVtgUqJX4-QlPhAOWC-mKN3HdzzTWIxlMH2AcScoAk9VSpUbrjZGKl7a5ODitTM9sNlZ8SgVQXcSiUg7zx4PYJmHu3Pc7rHO-K57843ocQUW6OVmjWNpHj5pCxLeFFS9PhgAYdivm5B4yhNqW7XcvBt8m-AkyeFfG3YLPQsfOiHG1jJyR1LXQFuig0ipoozy*v4T-huaFk7L8EISJgum0gc19obOftQNHAyWbO9YuahKGEpURWdDRtuSiS*2fMoeD2Wi1f-V5yDu6dVdMklErjE4DkSh8EVArO*UCc6ow4KQTL1WXkGK8XWIT3EAfCCOPdRMZgjcpFwmTBYy5c1x850PSmLfzb85fmvA9s1Rr-xstP1GZoP1b*iCY2OFcmjOHJFZNuhnAHHbPPrFPwN7o7n0G-laCKIQinsBYoqd7sEn5qf2XMBhUi2MzrosgTClTX0evo7j48c6cZ-0e5BOyOE6RSoDam0BdUjHIH33X8e0V8o3xVpgihkji5YiH3DYx0sa6Y5pf7y3OWO07kbol1Kz-gFM80pZFBcoANrhPPr4xt0jcovWRyrqNu5RGJ9g*IPZ2vTs2u8II0YhQT4NsaSEvwFLXTuDEuGaM*KQSJ8NJ7-y683Z6*-061aCEVq5At5OvNKBveJ1yEY4zAfE1XCJPzmz7IO1Lp62SXuyvjnLARtEfhgfDSHx0f03seDv7nGuefiHgdl9yhv6iTfDDpwBeCevoLFLMSirTVeEc6cYVUTWOauH4rljolcRnhSlYUCedFZ0ja1u7-kEFRrKdxgsAhcIpVBKuhi6oyC3uZZucmcyHftMVHuaYg3mzvwFxjum1AWfP4KyWuzjsPjPNXjfADJovyNQQld3OTdf-wegHKKOTd2l9b1XA*PbP95*iZlDZPlzcj02A5BMI4SYDg7sV4RSDSU5Q2nKcqCqvKNzrc5aR8lp2PJ*7-lj9r7siDeth422Q-pPtiQ4r7WzAgXaO9jEH8ow2dT7DFVgDVJMYk7bC*rzUaDJCixAia1u6-zDEsDH8dXbQp5S*GYLBWN*oR1a3XZeUpWmfk-1aEYrF0GKB45RWnBa48Jf5yXYVBp-Vc5LDf3*p2HUaN0V8z3Rl10bFVAzOvwK2eIFcx*pUB53h4GG5MRyI0oakmfXLQt4lfqpTLGBdHLrus-Lsgt7zMLrhLJQloqNT4Kcia7-Hw7zwNj1MCfGcbizw8BvYfhOZ7oMycxDj6xDYljZDvPAVVODRhnq6hZtnXN4nz4h-VgHYTVasv0Tp3aT62qZDzJzKSSDvhwvdUa5z2NAJaHEXi9Sh1FpIvYRFc5Gju6VKDgmAsXJoc7LBrPHIWe0ryNUMDo-ClIbOmC2M3kCLjRShL-2f7d1YlnD63DTAUBEBBuY*3*Mho4g6pih7H-ZMC465KkGxIRXuTvuIQc6D9CEHYawzOdWg4NrzS9dQWod1VfovdK94j2DlRFe4rnmXjeQgTsmzVJJepPfZmq0iHx9n4ECxW8PmjbNpArUfGRduAKKdpUtTGscokBBWBPEszSd8C3EgejCBHE*ZD3BplCwaFuQnK454SmLYzLFm1RguNB1jSPiY5rpXr9m6auKokXeWzKumvAsV1cp*psyvu-EuN0rLhE0EFDdGYmfgG55jUTmjBeqDblzNqYIhUOyoWybzmZr953bNNVVUIOv1ETJ*sw*11FiVNUroawhjcrTEwReF8UiFxKuyqCtQTLLY--N9LG*HVDRi6ElnfIYq53gHNErZ6Gt*eTM*K7xhdjMa52EcSrpqFnsGy1OUohszl9eQoMrTcYxZ1qPAeanUUdKfIfOuSkcKF-Lje7KPtCrYOuL0HzyXWMX-8lXH44pF7BurFT95GZ6-kxZbGCjVylA98WaVNKzXaSCU7xCc895zKHbmH5ftFNdxOAm64ttaAb7Z*IAkDYYUB6NUNYnYCRpP26l36rRondMVngfOn9PvoQh9vhQ7bhE*SD2FkFEsMbWMegno1VbUIwuGpepfryvADevsZEFC9EO9PwHUZgkA7W20i9DFYd9MTdK3mfBpa9TvTvOMxcAwJtaJoxO3QhoRCQZ51Dr-u6jKvHvkPUJsGsy4Ab*G9B6LgsCJQymi46lReiDDiVG-X7WP-IqIeSloHnxb7mFNCT8KUHncAKU8FSKJ7pR3yu6yymCNHnKi5Y0-O1qiiK2ieEPkSaBB2IiEIz0vDFJM4t-TRskB76XNDqoDWc6TWIy3F15Ln2l5cJWQvJP1YKgOp8WQlncIYO9a1pAG4kM-ZciKhB8VvNB-vlHuLaXFtqeERBiFjeMvC9n9a7yaF4wahx1P1q8kcnHCvVeYkb7MEYTHjNxOnrR6fhzRrFbjcQCAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eurl%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eurl%5B%5D</stringProp>
                  <stringProp name="Argument.value">Z-pUXzVtoO97h59KjEg7QRA9IEdb3CHwawHtJbFbLs8p9i2G1N5x-eh4k2KHFkVWeO8SDN6tBUdTxdTFLgv3FFmXYmzDncvkM*OF9UquvgTb-9Qx0QxhOI-zl8TzA36pAgAAALrcvAoAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="capirs_nocache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">capirs_nocache</stringProp>
                  <stringProp name="Argument.value">1616960189010</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">img01.ssp.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/file.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/file.jsp-225" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">3DZ1cInXUFeCpoyZtihVu4xgVjNXvL1QkIMoihKqf3QRmyiLYL09h5MxgsCIaEooMMP-f-WjkoW574MwEQx*7NNOzTJV7YiZdW0a6OPjxeOkL4Q2lcykb82lEoalIa2BwM5r3lT966e3PWoNWA720CQ43cNGdmbeDYJUgNDxQPN204Wdbgfkl4BnacpEvIjVA4aaytc9Hos4wpOBnXM2GDkeaPfUyL11Dmtpqewalekc2a9OIGCCd9jZwFhV0X0iRdq7FMDrOi89T70WAiT5sXe5Hp0fNOmDapY5A95up2pZO0WBRVPwYSfxSCJz6QDPXWPpkQTs9PACI9jyMFP8Lba5kajKCpGCbRDCKZ0E58gL2lweD4fjFiuyojOSj-Zjvvur387FhEbfGuNHWXu4EM*kKtbBQmIHw7kum3AC5Gdg2-OjyDVqO-AzGfnNnnhXxfIQmBfeeCNZoOP7v3UP5PHqg2biFeGPjtCWOzh1*tBu1FcSstEDMyQ9Xlj7NVTA-i0Mvh51I*adLqLx797Cdhwhjqq2VgnzDNItBJYfcE-acwr3-IF0oPx6sCYbDK5RnMuw2PoiWBeg0Kf6BGAs26mB3t2wdO802HvZ*i*J1ULxsieplf1gTahK8wRpF8dFiMbAPDIorHsYox1FVZKqPvw89e8U0876scpM29DDJPAF9vZ8LU0mom*zR2WwEVo622D89NtuQsb9rftyogEq5NBlKLMPQHBxavq6SDHjYC8o76gHstPALSC2F8TPgb1TvYdzA3VzCqfS4r9BwmhaPvekS2mV5IWjIEIe8jkrVnV2WQ-G9qqQd9x-jnX6vP1F5tykYaB2LtSMrz8ZiCjCmQnBm441EZsCAJ6jOWP0f5-yv10eqDVPVMNCYnPOj5bwU1zhSdEY-ujhcMoUhQM1T6dgr9LXlwdpRtq-tA5oKRMGV*-UgAEhuPSGQ3XpA-wJleyDm1XMEJzVrvyzcZpVjWjXciyeSaKTu5lGqrgtmIe*sm-YADLYeqi4-w0h87vVb35E1QOq80yFKGNEGj1gNQpevRiMeIVqk*5hQH8TvN*1COaUrIAestxrdZf-bJFclnk5bgImBlC3GKu7AUMvIdcq7KrOoJ7QbFNDl7tfcuQdzMuUXcySCy11hQB3Z9vB5-K3YnZT-Gqc*YrfOItpUYn*fQ6weLXGJUcPqH0pjwLl0fmCDxiGio6VdRCtN9JDgMOziy*-vYqrmiYTKKTi49MB0165dGPOBdMcoprjuIDrsL3w7wlez8nMGCYUudA40-VheR9NgfXp718gpfzF9uwG6WTUYgAqI755Yg9djOs4PfdjSlq0BluxIw1JOaVyTe9AjOoBquQwjqwHrOQ5o***9bprwC-O0GTV-bEAi4T7YS0xLFSv2*nUYTGoSmSoF2Q8Q29Tkkfr-UZHCjFiMN*v0i76xiwXdR5ayjIdzmwdPhXxOvxa22XyLSwr4-gRm5g9OoZw0uYHffwKJ2GdGg-ZoyMdLPirPv48r4K4KPCw1rdQx*ZRF2SPHz*X--J2gcyKvHHoYhwSo2qZZF5tF245NLwOu65h5EuroqwPPJApgjvO5pHBET1xk1v7NTBJ6e3D21M9V8fxnNm2B7maE-NR3z5BO3iTrVrgJDVwTuF8dnFHeCgMd9H5LwvXU2jY2Xf2FYyxNcKCTGhZQlcEDrtxb8SdNf695PxKFTCS8VcgYbEYnnXWHT-d0Hx8MIIHV2C-oYOmd*1rC*AuKfigXD7TB3viIfkuIaOr47GOf-PnhEpgHc-D8byb9U68ja50zCY3WtU3fsKTnvhvd9alNvOhx-tWSLRntG9KJgS2oyJIjYtvpuaTWL9VDyc8imVn*tl8LelYLzzo8WwKhKR2qTnWCPx7eFt7TQVyMiOmXN3rS57zfwFycM5cI9TQT5k4tHIs6Nnq330TxbwV8enM*oHaW27zDOlMJCn7eJJeutxUmGYkwolz373FomloIs6m229y4TwJGv*UMsUTfJID2aDyrevxNXwehzznRC53ifvdKJ1zqmWdVLap1uCBdVeuiAidxTGAJ4tI66dv9P3xVGooyXKj*m0i2tRNN6k2hZ0CVL04t-V3ctRgvhbovwwplfAYuOBfMXC1wE-6c4jIBrvUfG9m9kOGDxmKfJFcfSkpgJspHue7yAIRLBfitwM6OuxM8AMXy7Kl2c1ZgqYjy2nLLyFoVF4h-u4VRR7JS*KhsXS*l8uu4OL-kPvA4NGhrfAeQDYdB5FezfGBRjCP0Aot5Pp-L7D5hBp7WJdTmOVQ2cyVmdRVi6jGs1WNR0yTiOaRx1a*04Isbc8i0hOatgsBuOD6n2QWnCk5FYIEbGN*1JbaMB*y1jWvS2yEEBqAgc8vzm19g0bQGHhG7HzIt8qTT5eoTQqXAU1ggQNhAVx83AIc5JO7bi3ObiMbRRA9trq4UxXSVpSEHtwV*pvVjsW7RL**5g09jMDx5R8zvvaHqdxPIVYMwlfgfm9DrfOOfk4qrsJAzU4CYFCVD-gY4F1QV*az856nsLtwX*8eNT6MR6nRmFeUFMCW9s*Ic2pAit-yhQs5b203NPaV95LP2XJb7Ob*VTAq4xbimw9si4HsUySImMdvLN0RgCiHKhFoweCdujZRZHnI2**TS68wW2UO-KSYVc4rjefhQruJx*pyTOozE79xOYufNPuJS*uoRs9xqY6seIvoDt40xXvK5DtyfpFL8r4JagigpCYHBngJW656Ib7oCxtFUxvNqxUKIc1MMt*Gg2PUQns169*zXFyeZWVVcNGCAjJ2bA91bUKHIw5fDoyCg*9e14EyxrmHr8NE8lzWS4h*xYKWH53qsnBHg*JrZJZFlVG8Mf7NhPZbh7kLku9DGPO0QG-XvPi3weYaGwqrudPPlmPuETA5gzj-JPtKCon766pT*MUsb6GdgnPaDK79IPZCuM48x-I6cEQrIFH42AX8gaQVF5tGShfhSUDBmd-j76YPLq9LZdX-gNY4wZZ-WkQUOTKpurwrtBP5FGWvSIOQ-NpLslxQ2vfdPMSHrqt33EM16BZvarsDBtQboMZdloVMXHN4AV1q8NyWLy6a4r5n1JhKzUPG7l*lWoIATWgn9kGcJLDOJXxGHCq6tx5-r2bAyC1z5bXqZenSzQT20eakEWOSKwwz3R7VCzUCJq8iNGIbS2Ab5vGNr6VU3NsG*MLcSQulgB3bLqZmSgPPl-FiLjmxciY7mice5FYXug5t042Ao3ywJFxnMz*OjZ5yE81UOfmyCVzGmVoHCP3h2biG41T6pagqQcCdJ28AatDuew7QcfpYflHXIkagh1klWQywqzwDsDjw61cfslbq2OWEV*TiS76ZV8rHywIsPJ7nC1BWUNdhhDzV9NNqXUKuUIRnhBF8xKQ740Ul0n0-0CZ9rbq9wfVrdGrfv024WQSYKPq5yxmuwtc3dd*15QEzJ0VGVs6G-5wbgOd7LpZKQEBHF74qZHWe1e6lUrEEYa9ykmJ5CGXq3kra5tJ8gxS1xYPXYEC4f6fKREllhvDWx91Ww05oIDBBZ4piGtXB3MPI-37*KRr6KZTkl0pbpoKDp7HmDFjEWoYf2-gYCc5KhYP5*AIDzqRMOCyzyyJ6Qr1X4DR*x2ApRO*7z61ZGZm6KamPvON8ItYs6wB9R7IYuhwApflfurJK68ouCmRLd6qmuDTtYSd6HHoCAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eurl%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eurl%5B%5D</stringProp>
                  <stringProp name="Argument.value">02HBTGclcoKcjht*rGbbEwgPqEF-VZdnxJzmaNP77eVdHHSpeoSekWMJBzIHLygi7QdxNm4Rj*JL6zLDm8MjOAe2B8KBgH4s4-sPVlZEDDwmo02g307OiqmL3n31fIluAgAAALrcvAoAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">img01.ssp.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/file.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/52866c48c5a2b53066e0d673c03b1312-209" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/52866c48c5a2b53066e0d673c03b1312</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/59c2fa60dbf32386e471d7bd802187ce-221" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/59c2fa60dbf32386e471d7bd802187ce</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/dee245c5e6c2fdc3c79fc42062e75f4c-218" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/dee245c5e6c2fdc3c79fc42062e75f4c</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/3857026b121750c8125feaf81672afbb-207" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/3857026b121750c8125feaf81672afbb</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/imp/628034585/-235" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">b-Cdd7pAdyH4J1Uq-yju-x6BBrXAm36-RkoRNulr5b98bKd-hystZBdq-Lzx4089mP2aF1xdQzVdpdPZoTyCNN1ZysgpRhbt1XecX3DgcGSoJZfjQ8NagLTTGV5ebavZvDMpTpb9EVhLgXpkdQsa5sMEUOZSaNP2nzT*Nx1tyX*2ZsYtCyRiKJ3DiicX*1A5dy9dkkHRsFkbJOYp1*YPJ6ojJNPjnUrt4mfk0mj*8rntfkLIG-9MIVMGo32LUBzCno1bDLK7HXhSw3JH9FMGf6CtA4y1oeSyf-lyK*JIoU2Fjz*LAFCWSmfs86Q2UJ-ROgAEUicwNtfMswJfA4aCP9V5l9HNOpnUhs2ruItNhm-TrohtfPiY5IlGxgch*4a-pRSlLIqtUbWzKEmJRSf2zvQJIzo52Bhn7zfqCaV8HTf3FLqhSJOQEPZigz7cfQ*TgYutQDxqbLkVs4Tqx0OyKPY8ZMu*hzzGIAvWYqBpNnHnNImEymNVxKkoeMuMysU8rQ1x0-aXDVOmyDewkwa6E1olW3ESaH5gX7wevEE84V9f0-oGXBuVVhhmfcVKfP7VmRfGGyZTlJPm1zTdqidDnOd2scNsgM5v5lTcXdeOGNWoqat79GJyZbR5qfBwyiIUelK*JthZv2JAhu60y7T99wAtYYjTdCBBx-Gqf-UTqLN9TzvC0BXvmiS*nw7*milY5CN5ydtKYCOKnZ1k-VLNj6klZP4b7j6KzN6fhDb76A0XBVctTufNWSwxap0DO5sFKK1rf15lCMOrB6TrgRJR5oRJ0xFmhPV5lBrTZCOX1y96yFgBNKZ0HaCfzK34bkq0Ioplj5i26nvJGQOJGwWVUvZEMJGzvfhg*NdDI4P8LTzr-rVpKxrfhi7tIupEfhffx4lFxCEjCP3GTQ*CTocE1KNt5NZGic6tqPFBD8B7Hs-KwL5dY1ZKSFCEigBT9qop4DyNp924YcApThgjoCYEsQykOH9bUv3k57a*TsPeP2coCoTqDyxuiGidC6hzxOJ1ctoNTJVHQSauP3LzOx9B-EjmGEfsuGDOfLOGztxRrCHABW*TJGeHdeIln4KnEWaogm6E1GuwdQZnYDrflyjWuqpJ6Hwmt2dU-4JPK0*Y*8QBAmPoxDKEp7wQirWhTd*z0mPNToZi*v6eGnkNeGzf3CbvDE0BVv*rj9jnT-V6PYuoYSMTk5fJKY2Ghoaotd6hPm*vNC7R-t5N4w5veHb7eqGAgcc8l6IhKAbT7iI3IYctWHaHE-vDFN2MQqipqIqy8000BC-iw8ko8XpaSlJ1HxUXKpcdKaE-YaVnDOCiazIpB6L3Oi81YyhU7QMgVTXx4fjR-Wp-OzTwqXanHFcV3zmHJa54y2e*chpC3N-NxAlEXUwBQ1jKOc2Ah*dDm*XG8lETitC3pQGJgks0Bn-k*GdpEuz*ff1whKb3dv6FEgfElYe7Ea-WenBm0o2GWlYvKlkQiFzNuZURz6P4aB3T054j9bPed*tUPQ0cr6e1dcnoGoupjSyEjuy-6umallZI*lYReVPleX5fzXUIFO70bA*LLz2p1c7gMGy4aaPdtrT4ZIL2ZuGsYBtsKQuuRZ*h9dhW9JyUNLBb-zuGDoOCWsRdfyOSik0EEljm8NL5rpieaIdm-js*DS6amoV*Yh5xoPVKCkgZ524nw9kYGcVRKV7GjuzzH0lTMZh7Nv5Yez0CAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rclid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rclid</stringProp>
                  <stringProp name="Argument.value">24d3fdd83284d872</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cost</stringProp>
                  <stringProp name="Argument.value">0.00</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tp</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">dsp-rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/imp/628034585/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/file.jsp-229" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">kVJ66oW2eR1nougdAjNh09ES6tba6xAUohT0TVAcr5CgR7j9w5glOr9Td*yYk8rd7YGkDgvVA3OP1gi5PdcqE6kFi2hrp1jLMBJ1jtfOHTMLbDbxkeLepKGQNxnht3VUI4oJP*nGCfNN5AzUeVGaisHq6FwAj7kMu9jY9L7oLW-kfZiPRrp-6M4iYOw2YXi0NjJJ5cS7rBQxUiNbzMRTqSrZBAJULETJomqBqdeCHMdIwws5WoSYQy-3eAzoARNGd37aILIDn6NxXKHNP3T1bz8SRnkAaM9rd2O1SNEi8PzBFzZU6QNyF877j86Ty51WfDB*nm2xC8Y1DDXxsis*Wq6Upn08IRRVFBDg3L57F5uG-jdYr-AAmEf7-5emHQKOyxhLq5VuTUiy1mLN64nO8eu5V5pRHXwb4H--rYLd6nAmc*3vovlKPsTaxkgthBpIJRH2N6WZqV4KCSamFwKIp2XnlkYXC5mKxih98fh9BoV5PYw2PYm18CYffxjjyROhUbdrYFl2WPVmNpmCC-cyCSYOv*FznzSm1K6GAUJu6Aq397JFm-ogX5LfyY7YVaOfoc4qH94rum2pALsJv4TkTHflzQ8pJGaSMn5LJ50NncfREs1sHc4dODQ4L5SDGJPOYBaMD7R*OUw2tlBfbAwATuD--Djrx0dQb7tbxbzCGPeAI3hrENNhWalAOLwLLQIxtl0UO4D4jHEEmwtb7JitRZEtgZ8gf9fb9L3mCy-YOTdHBedEfLOHcThBZVmHooDJVmHjKsOoyz9kG1Oe7-QYaZeRlJ*NCSiBGpeG9j7v9kKw8bAv1jdYRc12pyuMAkQsnrX1pW1FyyMzHI-TaUHag4FtloPHTa2ZbzT39PFFgT3I*p0oqFGLgAL0Zgp8L4bR9qMBogMjiE6aTMKKLmSL2QmX1a5GLmIoY4HIr8ZEzDt4UUItdwbZWxnMrn1lVeWuFa1GypLW9UPOhNknbVx-tz4l2nr9*p-7DEwfAfFR82Lg0b7owVf7s4Eyjp9Dr9RcZ8*jQlQeHVR9LQLCSng9vclq4KgVdl3lw5dPI68POzQfMIXj846EmRwYAtFuFK7m6Sm1laVrqzlU173XTE0hF66TxDUyWi9ZPh7oIkpragwm9DCKAbJAkAmYty08RmM0Jr4PUNiU5YRqoHMJSyq8XOHEVjWnIqmqHxJu3CGdz4zmFK*wxw3VRpce8LPpLi*wttUM5OSHjjaTUx1VNwUejxiz9VthMbQxxOrxVYcB1D*yjephw8Vc89RxKJdWpkA8Jqyk-61rLM0mhzZ45cYxqC0Ps3TS-73zRj7C5739TPq9CYiMudHq*gaPpijlNJLnOq88St7FDEwWJXxS6XRu5MaH6mpk7Yuk8elltUBHem9rcp24CnleZCuLKptz4ozG2rO9LsVNasGGWUytlTyGuPKQjbshKx5tTHNc49py*jGctpYnMNrmnHmszd7GCulJnbhRQ3nClcBOVNqVD5*iBgWYwb-eV0wHFVIL8FoirSSR1gFnmVoNMqkrr0uYdWEqRcNf*x5xq2gPktlKJkeYndO5eECbRDlaezrWyugldkDLam0IlF*d8PopdoUwDvl6Ph1TcwTkyVxdGUIbA8i-pCMF9tl23NVL0KzROnubeMAVupbSzoywtuytNP2dNJ-qm5Fl-T1vUPK4ZsX8z0VmC6fFCROcVftKbnq5kabYq*HcohES58Q9eI-UrC33T9RSY1pJAA2GpuXDOuxa8wih01-qa2QsFBwYzNrsMh3fhWJcjasstS0nkaL5yEtWWQN7Fl3sW57U8F0LGXstNYW92Rx-cK8yQ3hN4xSzQCtNbRPRiXwHnW4g5SfKIcoklp7z4xfX2ce3B2R70qn3sD1PbVYcRzdNg3k19AAaDnF0hRelq8o-kHyJaouAALhjpdVjVlkZAKOOcCLu5MvphDdtRzhYaZUA69WblFGCGOrLJrlvLNypByCI-2F0dFSBUQPiurFR4foyjOwSIjIFnt-Y-bf5UsmC8R1w7AcbYbItv26TnBsiu7jJ8VZOctSAuHtqr6OIOXzyiibugfdgYPxBsGAcYT4lnlyrLgfaTGICqIWcw8hc5XK6wwXUA*y0xOaP*mZr9RHK5Jh5BCQCqAkz22IaKH*h20n9sk5WUCXSP7vaCdfU7JXP5b58oaarTv5RWSV6nry-O9L6PatyCCt3vPti9WhnGwaESTNGrTI-5aFBRYFaczL1n6gdK2hFE6dybRFUOS1cm9Q69eGSXJ29tQf23mNOsNYvwyqoX-I8g7iOIBrbU4n5Ygb3O7yJmw8UwGu3TG0ui3h-O9aZcHDfeH3LfleThBZ1c0GtlsWozDgtV4nsB7H*CBbog6mQ*-nm7z3mPQRI6NuSOF6BheRNnAOtmsG8dYuoB69*OJTWyjRPJPrALGt5gNWAi27Q3KDq-4uUN7JM2qD2BgD-rY9*k1TX9kFuRKwKE4OwVFNX1b4*-koxSUtYHIQRc2QYkVAWQ79ORpStlRrAagVoNTITLULg63stKJOdNv57AO3blskr3bX7W9pQCT4208jYkPl1vwmjYtS0I4s6NsPGQQO1mwm3h52vMfUc9gW6nFpWNIewlqCfBVGZKM8kDKAoJ2Yr9Ap7gEdPALYL6yy11lvgN7*S4rBP8A7IFolIBoHsGVYsRSsM*z*V89W6JYejM0yIgdEzHXehiH9svGPQorpVZ4HD7fXCKGH2ofk5bNAwFEGCDu5O8YbwgkLwhF8O20QhlQ93cnIdu4OrpDmVa*cD-T9JrxQNipoGEKDZPJetFBtTyWVpNuklGDcNQVuDumcE*B-LGeuRb-qmxbdxVNtc-H3t6ANQq7yEbPNGEpWIaQA2AoOq1eHenFpe8Hl-spVy6ihr4nVdfuuRdvbhqDscKs5akSG7*gl6invMYrj1gbFPYYyKg9H1oi2VP9Npbeta*sXyhNBQExondafNqzzAS9YoOfbdvKwO7hwfjoZj9a85bO5Tx5sljfbRCvAH*Cga2Qj2ktHOsLAcE36powYU9vdqqaich-XGkSaFBa1QQk4VMNELDvJ*oaYIUveJZVUyWSRzh0HGZuCPithLLSUIJJnSBCchP7tNyqucF6frCkiPPfn*Leb5bhXDjIkrgBZIsUu3L5XwvgI**FjGz0yXr0cP7r2S1i8Rubr98czpCCtJAIIz1MIGlC6PrQ4KoAlR8TOpB96MY2EOa9xmoHLiLdXtJKdxQRxmeHfdgO5ZihgvaraE33EaL9IY47brcU3vUjl0Y7KJgMuIQYhNJHGzMkJXGsywj46JrN74cSUihQhRoo3H*iwC9j*Ojk43aSNDGK3KmXMNi6UlnbQgRZHUmGT3eOu6mPkcVGReyF7ovVhqM0DLbs4HI4FfiPQMzAEFsBnMan9TYXSkTBf*soxE8FWQyIx2GdcQIabYFV2zFvYOxkoDm*ZbI5m7-FJhIKHkni7cnGB0y844YK9QVC1CkiX9Xv0AqJfaXhf2mCTR*pRKHTE8jSuX3Ub1lu27kz9L4UIkBIf0nZ7WasFVFg3bQWb2*mKAQUgyikGB3TGj*p9Gu2QN*9gwxANa1YpHsC1*vuZ63AnVfgt5NuQ4KFexwfpIUkCdSaebg*eizh*O-s8q-Z9NRfzMwi9t4bmevI7MUc7F85ibt8VIYhx1uDaR46itO6HQ7KiD8ReCKSIdY72ge3C8gwvXQpj7l52VqoHGTLXSCXJA-dMk-nUqir0vEzdpdqXlfitWlyYC45hmx0HU1o1cUABF9uHUkzYPK3HF0LT06HNQHHV5N0qhrkc29SP3smn1L1riQlhSMRn9fadvIxsCgBQVcM*jJQAtLLm0yUqbEqC7nt0hZILyYaSe8gIAAAC63LwKAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eurl%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eurl%5B%5D</stringProp>
                  <stringProp name="Argument.value">a6m9iFr8DNQQwfR8-UZamQQxhoS9zMjX9EQP0NoUIe-AFl9HAI9WYyEZNAKqOl5I10dGVIxrxq70w4i-plkC0iIB9oYe1ES3rdVwQwsepKRX09rVHqFMG2NpeLuK0PO*AgAAALrcvAoAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">img02.ssp.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/file.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/view/628034585/-233" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">b-Cdd7pAdyH4J1Uq-yju-x6BBrXAm36-RkoRNulr5b98bKd-hystZBdq-Lzx4089mP2aF1xdQzVdpdPZoTyCNN1ZysgpRhbt1XecX3DgcGSoJZfjQ8NagLTTGV5ebavZvDMpTpb9EVhLgXpkdQsa5sMEUOZSaNP2nzT*Nx1tyX*2ZsYtCyRiKJ3DiicX*1A5dy9dkkHRsFkbJOYp1*YPJ6ojJNPjnUrt4mfk0mj*8rntfkLIG-9MIVMGo32LUBzCno1bDLK7HXhSw3JH9FMGf6CtA4y1oeSyf-lyK*JIoU2Fjz*LAFCWSmfs86Q2UJ-ROgAEUicwNtfMswJfA4aCP9V5l9HNOpnUhs2ruItNhm-TrohtfPiY5IlGxgch*4a-pRSlLIqtUbWzKEmJRSf2zvQJIzo52Bhn7zfqCaV8HTf3FLqhSJOQEPZigz7cfQ*TgYutQDxqbLkVs4Tqx0OyKPY8ZMu*hzzGIAvWYqBpNnHnNImEymNVxKkoeMuMysU8rQ1x0-aXDVOmyDewkwa6E1olW3ESaH5gX7wevEE84V9f0-oGXBuVVhhmfcVKfP7VmRfGGyZTlJPm1zTdqidDnOd2scNsgM5v5lTcXdeOGNWoqat79GJyZbR5qfBwyiIUelK*JthZv2JAhu60y7T99wAtYYjTdCBBx-Gqf-UTqLN9TzvC0BXvmiS*nw7*milY5CN5ydtKYCOKnZ1k-VLNj6klZP4b7j6KzN6fhDb76A0XBVctTufNWSwxap0DO5sFKK1rf15lCMOrB6TrgRJR5oRJ0xFmhPV5lBrTZCOX1y96yFgBNKZ0HaCfzK34bkq0Ioplj5i26nvJGQOJGwWVUvZEMJGzvfhg*NdDI4P8LTzr-rVpKxrfhi7tIupEfhffx4lFxCEjCP3GTQ*CTocE1KNt5NZGic6tqPFBD8B7Hs-KwL5dY1ZKSFCEigBT9qop4DyNp924YcApThgjoCYEsQykOH9bUv3k57a*TsPeP2coCoTqDyxuiGidC6hzxOJ1ctoNTJVHQSauP3LzOx9B-EjmGEfsuGDOfLOGztxRrCHABW*TJGeHdeIln4KnEWaogm6E1GuwdQZnYDrflyjWuqpJ6Hwmt2dU-4JPK0*Y*8QBAmPoxDKEp7wQirWhTd*z0mPNToZi*v6eGnkNeGzf3CbvDE0BVv*rj9jnT-V6PYuoYSMTk5fJKY2Ghoaotd6hPm*vNC7R-t5N4w5veHb7eqGAgcc8l6IhKAbT7iI3IYctWHaHE-vDFN2MQqipqIqy8000BC-iw8ko8XpaSlJ1HxUXKpcdKaE-YaVnDOCiazIpB6L3Oi81YyhU7QMgVTXx4fjR-Wp-OzTwqXanHFcV3zmHJa54y2e*chpC3N-NxAlEXUwBQ1jKOc2Ah*dDm*XG8lETitC3pQGJgks0Bn-k*GdpEuz*ff1whKb3dv6FEgfElYe7Ea-WenBm0o2GWlYvKlkQiFzNuZURz6P4aB3T054j9bPed*tUPQ0cr6e1dcnoGoupjSyEjuy-6umallZI*lYReVPleX5fzXUIFO70bA*LLz2p1c7gMGy4aaPdtrT4ZIL2ZuGsYBtsKQuuRZ*h9dhW9JyUNLBb-zuGDoOCWsRdfyOSik0EEljm8NL5rpieaIdm-js*DS6amoV*Yh5xoPVKCkgZ524nw9kYGcVRKV7GjuzzH0lTMZh7Nv5Yez0CAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">dsp-rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/view/628034585/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/pixel/628070045/-234" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">bY6KNaHyYhywMLdf3xbbAIS3mp3zJQ*5UjWxgmhsiZmCumXQ4nUU3h9OEMmjz6IfwfJKd8C6XqQdDrnchWisyOmTfxDlX1tyLw7pyC3saSNrhiSTF1TQvOJveUJ2T4t*fBv0o2i1C91ELIk03XtxKIEfKiNSQxQgSwdgVjGEl5nzSBkF2hC1bXUYjWy7CWZRtwwwUF*ZBeawsIZGB*b7656YZ87QgF6Rd9At-WFYP*wE592ci4kg9GgjwEpB8gI7*Vphv3-twNoiUsyMTDwKqtTs2yoFN06txnFwqUVTue1hudt3GXyej-2BEkwv0QYx3mncg1ccDX3rB-Q-aZ2i0DviPIu4xbvY1-pdmKenQdP8-68becYUIFPcmzwE-7D*RA3h3J3oCR*I6BZ*dU4Tge34HqdRbVwaH3s19L3SnOo3Ls6JEyU1nA*3AEHprj4nLMcBXldlbzrVlgYahKB00Onk*MBfdUrMjOitfdF7ktx3H3cAiW2J3kfqyJb4MuZyl2d*oaEaYqmN9rhC-OX54VRMrFJFZWpm79YOTPjzkCVg3-Q7hopcuuDcTesg*Y2yZnbgIGg9DXCNUJb3DSiKi1ev2GF9*EbZO1wP*YHkbjYJYzOia-6rrItiGT4cRorbtSL5ZrPMKP79a0M9Ew*X1I2OE2KNZmiAofUBGvyoNI0Fdt8KlmGsDOBgP7hUvSMnaDxk0sjtuJSIBxzzGKtiNBsprC86FkIr5BHF681nZIqZyVAk-2xBQlHY4c4zFfmDQEmII4CIAc2hjqtvZFgPsSYyldSIJI1N1mJlZ7AMSdWVC1TPlFUzjQupZPep74KL1EfZMMoApJU7wvglcYWbLMh5USlRPgGGU8-cqhQ5t9nZINADgBZqK4cTEdvA*rqaLt8r9JaAGLmdf8vgqsEP7tQZaVsM8YOYG7AoJZtxBYsOziARQDlii3jtbcZXQudciXQajdyz8tjSpKrQJQ3C2EhMjZp2Qr4JNqAhbGlHj2lkNb0Qf3KPOBPl27354eDlxLbamVFTFZRquYflGlNntiVsqNv4ET53hw-d*8SsXVzSjTSMM5DBiYm-sAfw8TOkDXUhMrOfRt0MijJm4cLeRfxvuazR0Oj6tmLqLs4oEHRgUilCNxB44ediPuBNv5fc01bE8f2nPOTaj-Qnaz7xzLA6-h8wql5*IrpfqwtsiYrzyMFXTfEbDijWH8KSm9pyrPZVSxx1Z*JeBHpybZEaFN2Rzx*qf-Mpds5J3aOcXnDKlJNQJcLEpDnzDOiYw4b7uSgGs-CyOuKjjp-n-qQrBvuCOgav31vuvwqoLFnWQwpK*WdsnxnqkvKxLD52Sw-VaWvEapvlyQjbxoOxzPacAOSj6B1IRIIMkUM78zQcHOUB4Ry*yf3NtOOjQMCbYhnFlMYIYShpebsAYjBlWVmsnnZfpFKMNYY-JG8pn6-qNXYRg6xuCCiaPk11iLS68k1fmiY4TYh-5mV-UTOcUExP7PsJgO7ksMTYTmjeA-G*qLzeBlxwUgrnJd5Og9qGY9BHDISFHWd8APxsXwwI58c5L1pZAX-odwjz*nMhTzIO1rQZFcypTE4aj1xR5KlTNY-6qheS3J8HhI20WR1r4DF6kBHgm8KSHGe77bm027sVQ0TBMo-FsGKcyPScSkAP9ucvuyOUdKXmLiE-lK6VRdu8FwRZNyvJVTnAj-0t6NaocXzawmB7b71Otz7EFNuFLOyHWSP5ajWaoaMXKOosOXE-0EZM3Fun7z8oqSYcJthZyGFV2M5wDOm7YVhXK0ZzErHvTpMj-udrsNLh7g4BiUl3sAIAAAC63LwKAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cost</stringProp>
                  <stringProp name="Argument.value">128.91</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">dsp-rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/pixel/628070045/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/c2a84f4f8eef244cbc15302cbf1a2691-213" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:220,height:165,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/c2a84f4f8eef244cbc15302cbf1a2691</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/min/628070045/-232" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">eP1QiPQeBYC3a*anEuX1s5M9kuWYWVuOhBNWLKwqGEXrfVn3*lnABxZhSWixgBDaGAlieJRAfMHe4-FtWVEYnzmq5e1kmiNStHwZGGAX0cOp*rUt3mF3cVf4Qcz-4Xu5*qOSATxlKRbg5OgYnqSBvrjesaQvvopEmBSBn2eiRms5k3OUBoT31s6aq7FO9dHDcFQZFG64qUyEoWEekfprQMg8FpFfJwY7I95H5HfiQJvYTyBqgGUps53uF1SMXsZVqxEvYcO7acq-f6ZWRm9kyba-6H5zYo-hV2BZ*xjVael-hsRXFmmRxsfEiUqMGDCR3zcD4fpRpRq20LgrwQC4w-5xWm-3L4khJmXHN6SwkmNuMngAJwoAZIrTAOVR1rNkKIFpU4vQdXIa9h-i6kwzbg9qkXTV1JqPB*QfLkO*M5S6mBTtcDjK6QIRjgfDz7oljtJ6V6Rw-DtypvcVbbu9ROPP2zLfaHIdc3vofId2p*a7*Nbg**IiYJgy8050Nd*3ZZLyp6y4f*akij*hNoxKOQAfTEIwygysuEE4rOuAmdn9oTVt4snJqfnpaa8Qsf45RjQbfLZMesibfVmnmEqrit8stkeIfoojLPOqD5WBJ*owLVULfP**1mrhhS9pBizkE2Xxcvq8*aQo8Ni7Kop8Ww*MloDDGP3BEk10Uvvl1APnT4h04arfzi6MwXC5JXLtS2LgCVafEMmqSSTwmiBI1dYvbqbenAuC5-UnvA3DdKwOBlUHqd9WcpEGucc7mzk2MHQDY4XGKBolAmf37YfHJtYAq-FdZVSbqWON27hdyovKPnrTDzDPXg5ar73mP9VO2w3QJCrLlztw70BsO1-lDBTw7fZdzjwyEgF1x9*O1XEdFgyErLZFsic2DzdGWfJRhuLTVJE71bgjRxqhB3kEhElPntXAGlc6VD7tgfzJT*MjkxzO4HiZiWZb0RvmLEoN7g4GlcAxQHMQBj48sg7tt2GPbtZH-dMtBApIVK1jRVpUFIX*ojG*Xfo1fXf2wV60bhpBHFT-nJ25EYaVJk7abKS2kTaPL4qk5OXgtOf2u-aSIIFKX*A1mfaLPnGmwJkcwouNpJME4CPmig1K1hHS*RPAyCAnummssmItEDiuSWig54Sff6hTUnXtQS0zmFmWlPNDzV1L15G8pKJIHpc*ViGKU5HIlM7ZvCmWDqOWSyPrn4ej-G9oopJq*dGy*DPI3IDEOwzXap5oOQuFgefr9QzyksVixpMjzNiG6U44mtN-NlP4S9qhuyAQaOQGQffzR2idsJ8nrP44JfpgDEwSVcdywy62af57i58hqi5GzrJJTHIe6wzzxXHX5UaZFg3E9LlWqPyh8Yh1K-PwrvSzFHdLkc1om4Rn7IFUTWjX9tZI95zQ8T4VjMYylEGvri*BpvGEnYVJKPkyIf-JvZqqptK5iLDFdu8G6G7UPAd8ZLYPkG6LwXTImjQZPCL4*uR54bJzY6raejQhdZR31E1heOGC6014a0xKXmLmi57ZPDlcTLmDFA7NSv1cX5*3kXuoKva8Lu-FmqZK36xjwp3hbZd8Wqgj7oPJ9XVAvNHqpekBl9C*7gS5pwSGEMlnhrN5b9YopjzlIdTKs63qyKeg9FHbRkABA62ej7GIocBZQvIBu0ePbHJMwbppBk-ios*JVhjYIvUfZg2i3O8vZt8lohklKTLWzg5uZcI6WUFp*7hOEbCpTjnqJVHe-KXTVl1GaExDISQjkXFmQwRL7SeHs9MK7y8Ps54XdgYiq5Oty7MCAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">dsp-rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/min/628070045/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/imp/628070045/-210" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">eP1QiPQeBYC3a*anEuX1s5M9kuWYWVuOhBNWLKwqGEXrfVn3*lnABxZhSWixgBDaGAlieJRAfMHe4-FtWVEYnzmq5e1kmiNStHwZGGAX0cOp*rUt3mF3cVf4Qcz-4Xu5*qOSATxlKRbg5OgYnqSBvrjesaQvvopEmBSBn2eiRms5k3OUBoT31s6aq7FO9dHDcFQZFG64qUyEoWEekfprQMg8FpFfJwY7I95H5HfiQJvYTyBqgGUps53uF1SMXsZVqxEvYcO7acq-f6ZWRm9kyba-6H5zYo-hV2BZ*xjVael-hsRXFmmRxsfEiUqMGDCR3zcD4fpRpRq20LgrwQC4w-5xWm-3L4khJmXHN6SwkmNuMngAJwoAZIrTAOVR1rNkKIFpU4vQdXIa9h-i6kwzbg9qkXTV1JqPB*QfLkO*M5S6mBTtcDjK6QIRjgfDz7oljtJ6V6Rw-DtypvcVbbu9ROPP2zLfaHIdc3vofId2p*a7*Nbg**IiYJgy8050Nd*3ZZLyp6y4f*akij*hNoxKOQAfTEIwygysuEE4rOuAmdn9oTVt4snJqfnpaa8Qsf45RjQbfLZMesibfVmnmEqrit8stkeIfoojLPOqD5WBJ*owLVULfP**1mrhhS9pBizkE2Xxcvq8*aQo8Ni7Kop8Ww*MloDDGP3BEk10Uvvl1APnT4h04arfzi6MwXC5JXLtS2LgCVafEMmqSSTwmiBI1dYvbqbenAuC5-UnvA3DdKwOBlUHqd9WcpEGucc7mzk2MHQDY4XGKBolAmf37YfHJtYAq-FdZVSbqWON27hdyovKPnrTDzDPXg5ar73mP9VO2w3QJCrLlztw70BsO1-lDBTw7fZdzjwyEgF1x9*O1XEdFgyErLZFsic2DzdGWfJRhuLTVJE71bgjRxqhB3kEhElPntXAGlc6VD7tgfzJT*MjkxzO4HiZiWZb0RvmLEoN7g4GlcAxQHMQBj48sg7tt2GPbtZH-dMtBApIVK1jRVpUFIX*ojG*Xfo1fXf2wV60bhpBHFT-nJ25EYaVJk7abKS2kTaPL4qk5OXgtOf2u-aSIIFKX*A1mfaLPnGmwJkcwouNpJME4CPmig1K1hHS*RPAyCAnummssmItEDiuSWig54Sff6hTUnXtQS0zmFmWlPNDzV1L15G8pKJIHpc*ViGKU5HIlM7ZvCmWDqOWSyPrn4ej-G9oopJq*dGy*DPI3IDEOwzXap5oOQuFgefr9QzyksVixpMjzNiG6U44mtN-NlP4S9qhuyAQaOQGQffzR2idsJ8nrP44JfpgDEwSVcdywy62af57i58hqi5GzrJJTHIe6wzzxXHX5UaZFg3E9LlWqPyh8Yh1K-PwrvSzFHdLkc1om4Rn7IFUTWjX9tZI95zQ8T4VjMYylEGvri*BpvGEnYVJKPkyIf-JvZqqptK5iLDFdu8G6G7UPAd8ZLYPkG6LwXTImjQZPCL4*uR54bJzY6raejQhdZR31E1heOGC6014a0xKXmLmi57ZPDlcTLmDFA7NSv1cX5*3kXuoKva8Lu-FmqZK36xjwp3hbZd8Wqgj7oPJ9XVAvNHqpekBl9C*7gS5pwSGEMlnhrN5b9YopjzlIdTKs63qyKeg9FHbRkABA62ej7GIocBZQvIBu0ePbHJMwbppBk-ios*JVhjYIvUfZg2i3O8vZt8lohklKTLWzg5uZcI6WUFp*7hOEbCpTjnqJVHe-KXTVl1GaExDISQjkXFmQwRL7SeHs9MK7y8Ps54XdgYiq5Oty7MCAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rclid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rclid</stringProp>
                  <stringProp name="Argument.value">6129980b0a6eb3ee</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cost</stringProp>
                  <stringProp name="Argument.value">128.91</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tp</stringProp>
                  <stringProp name="Argument.value">eyJkZXNjcmlwdGlvbiI6MSwiaW1hZ2UiOjMsInRpdGxlIjoyfQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">dsp-rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/imp/628070045/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/min/628034585/-230" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">b-Cdd7pAdyH4J1Uq-yju-x6BBrXAm36-RkoRNulr5b98bKd-hystZBdq-Lzx4089mP2aF1xdQzVdpdPZoTyCNN1ZysgpRhbt1XecX3DgcGSoJZfjQ8NagLTTGV5ebavZvDMpTpb9EVhLgXpkdQsa5sMEUOZSaNP2nzT*Nx1tyX*2ZsYtCyRiKJ3DiicX*1A5dy9dkkHRsFkbJOYp1*YPJ6ojJNPjnUrt4mfk0mj*8rntfkLIG-9MIVMGo32LUBzCno1bDLK7HXhSw3JH9FMGf6CtA4y1oeSyf-lyK*JIoU2Fjz*LAFCWSmfs86Q2UJ-ROgAEUicwNtfMswJfA4aCP9V5l9HNOpnUhs2ruItNhm-TrohtfPiY5IlGxgch*4a-pRSlLIqtUbWzKEmJRSf2zvQJIzo52Bhn7zfqCaV8HTf3FLqhSJOQEPZigz7cfQ*TgYutQDxqbLkVs4Tqx0OyKPY8ZMu*hzzGIAvWYqBpNnHnNImEymNVxKkoeMuMysU8rQ1x0-aXDVOmyDewkwa6E1olW3ESaH5gX7wevEE84V9f0-oGXBuVVhhmfcVKfP7VmRfGGyZTlJPm1zTdqidDnOd2scNsgM5v5lTcXdeOGNWoqat79GJyZbR5qfBwyiIUelK*JthZv2JAhu60y7T99wAtYYjTdCBBx-Gqf-UTqLN9TzvC0BXvmiS*nw7*milY5CN5ydtKYCOKnZ1k-VLNj6klZP4b7j6KzN6fhDb76A0XBVctTufNWSwxap0DO5sFKK1rf15lCMOrB6TrgRJR5oRJ0xFmhPV5lBrTZCOX1y96yFgBNKZ0HaCfzK34bkq0Ioplj5i26nvJGQOJGwWVUvZEMJGzvfhg*NdDI4P8LTzr-rVpKxrfhi7tIupEfhffx4lFxCEjCP3GTQ*CTocE1KNt5NZGic6tqPFBD8B7Hs-KwL5dY1ZKSFCEigBT9qop4DyNp924YcApThgjoCYEsQykOH9bUv3k57a*TsPeP2coCoTqDyxuiGidC6hzxOJ1ctoNTJVHQSauP3LzOx9B-EjmGEfsuGDOfLOGztxRrCHABW*TJGeHdeIln4KnEWaogm6E1GuwdQZnYDrflyjWuqpJ6Hwmt2dU-4JPK0*Y*8QBAmPoxDKEp7wQirWhTd*z0mPNToZi*v6eGnkNeGzf3CbvDE0BVv*rj9jnT-V6PYuoYSMTk5fJKY2Ghoaotd6hPm*vNC7R-t5N4w5veHb7eqGAgcc8l6IhKAbT7iI3IYctWHaHE-vDFN2MQqipqIqy8000BC-iw8ko8XpaSlJ1HxUXKpcdKaE-YaVnDOCiazIpB6L3Oi81YyhU7QMgVTXx4fjR-Wp-OzTwqXanHFcV3zmHJa54y2e*chpC3N-NxAlEXUwBQ1jKOc2Ah*dDm*XG8lETitC3pQGJgks0Bn-k*GdpEuz*ff1whKb3dv6FEgfElYe7Ea-WenBm0o2GWlYvKlkQiFzNuZURz6P4aB3T054j9bPed*tUPQ0cr6e1dcnoGoupjSyEjuy-6umallZI*lYReVPleX5fzXUIFO70bA*LLz2p1c7gMGy4aaPdtrT4ZIL2ZuGsYBtsKQuuRZ*h9dhW9JyUNLBb-zuGDoOCWsRdfyOSik0EEljm8NL5rpieaIdm-js*DS6amoV*Yh5xoPVKCkgZ524nw9kYGcVRKV7GjuzzH0lTMZh7Nv5Yez0CAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">dsp-rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/min/628034585/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/file.jsp-228" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">ZIPSMXsdPLGFrDL5bv-y0pvsWMYNC-bdCtgGjrAOycf2Hh6P7KIrFJrb5woQA95YEGBoS*PdfvMXzhTk3M6FW1FMskqwXpBs6EmAt-mkCNROFAt*9Jg3aR2Hu2IvGkRIxmGtSWpKUhuA6XJhngN*rK0mc02YicTM081n69kYvERgpGy3VMd9Icie9PSJHSClHp8UVUF28zX04PNPa7eYwu6k-hor5FHlIFA2xf1mM7N5YxGdZj11uLFB5l5jhuEOo4xDUiNhhnni6mxy4XzLqptO5tXipUEIu6N1KImZDkHtE2UXT52NBKULXNorlIL3shQO1oauhc16lrd1uEEt6Ymvzc29ZfXarLH9qz0aA*wl7B9GRwb4E-iOaBK23g*EZiP-6Tg1LY9zzpgZhrpCynRaAVsIWhWoD8u1Jdf9XpFikUEz0WovWLZ8xU6jGq-br811t*mOBp6uWT4q2VN1kELALc9PFQXkko8BiPk9TIfNy7uWJcdAg-KjDvJK5DflQ3UjLKX2jbBTEj0Htd-jwvSTR3ZQ*K5BWIPTOG8IBf-xh*8VC3MXPJaUPyxjGXqdulOOqh-JzdASkhcNm8iFXPVQPS0K7NoUPiRy*TuwoCX6MTAQ5pIaAlbIPXjNov6diEuuRNSmnybhOJlpsNqApp5hR543aHyB62Y5cLtVWhaLrOVoFCfSNB9F5HWRBp-S2*oW3iQmfDdnCse4MnJXQkihKyeTV3feU5dp-WF8u51sWRiRlUQW0m4Dg85g*UudVFpS9QTMfVC2O-G*eAhfGjsF1PVVip9RubRUPyegyBP-fsDP4TQojbsBuUw3qLj2iu8N0ph*r*VOeqHSmk24PL09lTHdjegUuZxjI2Tybxcz3yap2s9pYJxcovNf5hWV1t-Up8Yvl7m*uARw4OjY2f7fd635HKOgk5UGEkq9fGwoFVGt0VO4WfbzHHqnPVW5GaZqCogOJku3888dX2QVstmGz2kBvs7oTzir0TYGvQVfPAjNmiW9Z8kck8M*Y-chSnc5uHd-pNN25qp7V05x1sl5Efia5IiKt0iG8KvNg3z0nv0nKlPKzFwl7RS6BrhBM84p7f00xA04SnGyHVMyQslghD55bqpOI3XmC0s0EmbW9nD1p6VnWhByxnGIt7XZALMpHqo5tHhkHWkVs2uq*puNYV2bG7XFU2Uw7GtAn32wqhyE*mH815OPf1RMxLNrvjBGLQgozvWUf8N*f97TFIAs1AbBIx-45IAebXVUoyAbE3cyMMV9oJyOZPvI92nsEFQNQ4PJMtia8f6N7M0wh9-700fs2PGTBC9VYYAFYwv9P6gak5arMwzwJpyIVp8UUdyXV1NYc*XdIen4LIjUSsOi5tIkHB8VCYF1HPszuFVZUaUdBgN5cldQcEoaydPRLkcnGZmksPooU1jY9Yk2OboJfBoWUhSGXjOY2vRPr5l4ednq1s7tkQbGKEqQwnB*nooT2I6NbHNx5rULiCvRpz6vLHJJGH5eWrE3gnGYp73oJFE4mBlLVbZGro8TxT1VGx4kjvJWPNZm1xTpSQnl5riw5BJSklWQb1NEBYzCmyj6AokqbvpTM-82xJNfUx9jxmV7Hwlr0kOVzcrId-CqEVbZvqSRfCActzd0-Bg30iJ1egZJpcypkYUWF3tH6-JQYZHsBtvVZIV8kBcjcuJ*oxzybjGsbgBkwOOIJGX7wEpxX3hpOLnfrJ2bYJxphT7hh3qHriTDiZue-BM91snT1*qKVXaXZGxPhOfsOFQ4sPAZizgqosZnnxWs1boWL34jfVW4qkS*zBBESRY6o7qy0OtsHytfw99NXfVxzEUXKK4K0qW*735h947ZpteTB8nWIh1M7*4VdztaoY5pRyawzQCPWaYB8Mv5RhJERFfeCal3DKPhwFYudXxGAyk9YbxAflRja5kS8YGBUEmZwsN165UEHs1VdwFTtqUQgkSbYHsmU6IJjRBn3FfRsMEGAalKJocjmE0yO9A8iiFW4qaKgPcYDsi0LqPF7tYQxz6kHqyhIv5VfqUYIEe4jiW8k1UHh1yODCZ4M0QKSyyBU5e8yemJTtlHZ3sII6exJEe0R2XeJoow8Wz7EbcfHT*Uh-YWfGBDpmvs4HNn2pOuBskoW3QYA5B6F08M*sf1AFbafECPeVjbiNmOzVfaHEfVc61qvZepNOemXR7Xk8anTSBFT83szXkB4Z5YNbV4NilgT3e6FRbaQnGmRpZ49koepUEkYQHTIeZLs5ikbgLEtXkAB5gNZLqf73kjDTe0*yaFqq-i9X8X8BuAJhuJrQ4degBxFtLg99bK6JmG7JcbwC6DjyBzeI1DrDCz3tAzqjE-*tLstmBWANrHBKqKXtuO3wspm8ZfHS1rCe5COMxJ-WtZnKkeJnHCBCwkPsMVlZg-KlknEBP6v*i7QXTTYzgGo3pqAThxUwnRXwnVVWftHea6uUdW5VSVtr7bxN8eEVepNbTtLnoRXojmGfVK6yCwpIHPzC*DktyWJDOVVKL*IvVAKsiVawQWWycUHpfL4qhm2IuUBsbMJePFhrLc2mrN17VK0LZOOhFwmfC1fxn28gg-srzXWtlJ7mM1Msj2A-PzA1CGBAZrPVvN77zTdUhyjkEdbVpZUR6qanCudfr8Kgf0Redth0XMsC4GXcfEgZtReveahAWqOZtf7uCWeAHcJGrEhyjBqoqNeNg1izgH07ZlsH64ngLtoMUPbzKAaY2hBPaYvWx9RBg41AUz3OwO7Pcl4qMWlK-g3Kgpz7JPqzkPvjG-jOGFEDuU7b2CMnKHQkNGX6PSDFxsea9CdVmJrMr2xIFCfzqgF6tqZM79bchMCWBc1mMpoXUgKzgcSlFFFVKvPcJOL9cMKGpWiYmRlrabXsp1jBXuuTXxLbFK9bz7AEAmeXZwZS3AblMolAP0Q-XP*wIH6Oi5T40ONhm3epvv3ufd-b8Oy49BMBDQQFTtlikqpFwJ25HtlYEktkjeHKR4EEOp2hHe1VwsCxD9IdUqBLLn1qzdrF6WmbKKlS6ViHQ22xUNd4mNleGzg0NwGwBAx9xPWDdxrtT3Y8i7IjDMQMLstD1aEQ7M0BiZc38Aqat-X9FY5MxDAVUM1huf7RLGZ0RqA0GcyGmaaAF0Xw3hvYE64oJeGu-*LnmL39ctsW1Fn7rsUxd4IDIHoxxhsgi-DxFb-gI99N4bFkGMik7otM1ufoRSFW5btX2DUKQT20Jy43uG*Ock1FBGVAgqCPPb09QqeedZUV77kEU-EA8SGhLJeR-NbY0aPf6PAS6kZx8360CdPWtrg-8yzC3cS1sJhmrfTWotr2OVbliYjn-MJxP8nophVncdNodUwRIqEN82Ta0Bi1K9Fjm7BYFm-XzOuDdmcqJzosVMc0uiF28zaf0CtnyiBedfti0vo*BblGJBLysExu0USv0hrM6YjBq7iLz0EBTBrWPUKQH2G-JlYrAwVCvHmM2zswD1-GJKJiLQ6KqoXQ93zo6vQ*N1byfRxNNxyeANZjg0xpP77CXUU*-67nmiVyTPLg5Gcrib7xsPUFOzqkec1dWxPHzAj1w2Lb-sJIxcZdKbubwSES3svF9tAb1cv-EN7w0tGVbYgdo6uihq10jE0EYUZu7vYIK3ImsbTLRpov52VIZaoKjPJXagPbAa1PN4gt2tlU6B9U*azcl5SYU0qtkfq9Is**Pkh*He61HL4FV5MsqN3Z3xG45KN5okY6kB8OYo3dCo8AIAAAC63LwKAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eurl%5B%5D" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">eurl%5B%5D</stringProp>
                  <stringProp name="Argument.value">qkjGIyEHCVvUwi19C0RxsDLNiSPXBVYEdnUW58M*lYEoCfhYvfaG6eSCh*VD1WxNVkbzNwmUgbqkc6qIWvrIoqv*J7SU4x2gu0dsdbHIqZACAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="capirs_nocache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">capirs_nocache</stringProp>
                  <stringProp name="Argument.value">1616960188794</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">img02.ssp.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/file.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/5f19933dfe014b3e00d53c1ebe8a468c-219" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/5f19933dfe014b3e00d53c1ebe8a468c</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/4e46a756240a10bb95711cdda2f64e6a-214" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:220,height:165,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/4e46a756240a10bb95711cdda2f64e6a</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/eb8f6d5e5c41521d9809d45139c86b14-223" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/eb8f6d5e5c41521d9809d45139c86b14</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/01333fc283c31b1ab44937cd0eb91e85-217" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/01333fc283c31b1ab44937cd0eb91e85</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/1e8bb58a378d3ac5ac4e4c165bee58f2-222" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/1e8bb58a378d3ac5ac4e4c165bee58f2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/0c005844630e573738872eac7cb73648-206" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/0c005844630e573738872eac7cb73648</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/c7b915241cf3e37f0550e0edff542e4c-202" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:630,height:350,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/c7b915241cf3e37f0550e0edff542e4c</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/e35f78bce6c2c26cb66348123ec64291-220" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/e35f78bce6c2c26cb66348123ec64291</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/metrics/-203" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;time_to_interactive&quot;,&quot;value&quot;:5795.390000000013,&quot;type&quot;:&quot;histogram&quot;,&quot;prefix&quot;:&quot;perf&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/metrics/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/e4f271e7bf4181bde6ad20c1c5cf352a-224" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/e4f271e7bf4181bde6ad20c1c5cf352a</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/metrics/-215" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;first_paint&quot;,&quot;value&quot;:1277,&quot;type&quot;:&quot;histogram&quot;,&quot;prefix&quot;:&quot;perf&quot;},{&quot;name&quot;:&quot;first_contentful-paint&quot;,&quot;value&quot;:1277,&quot;type&quot;:&quot;histogram&quot;,&quot;prefix&quot;:&quot;perf&quot;},{&quot;name&quot;:&quot;main_page_size&quot;,&quot;value&quot;:0,&quot;type&quot;:&quot;histogram&quot;,&quot;prefix&quot;:&quot;perf&quot;},{&quot;name&quot;:&quot;latency&quot;,&quot;value&quot;:1127.544999999941,&quot;type&quot;:&quot;histogram&quot;,&quot;prefix&quot;:&quot;perf&quot;},{&quot;name&quot;:&quot;transfer&quot;,&quot;value&quot;:312.74500000006356,&quot;type&quot;:&quot;histogram&quot;,&quot;prefix&quot;:&quot;perf&quot;},{&quot;name&quot;:&quot;DOMContentLoaded&quot;,&quot;value&quot;:1691.9149999999945,&quot;type&quot;:&quot;histogram&quot;,&quot;prefix&quot;:&quot;perf&quot;},{&quot;name&quot;:&quot;load&quot;,&quot;value&quot;:5963.960000000043,&quot;type&quot;:&quot;histogram&quot;,&quot;prefix&quot;:&quot;perf&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/metrics/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/32b87f346f2786b4794e0c609ac5982a-211" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/32b87f346f2786b4794e0c609ac5982a</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/img/bafd1d4555516f482f62561e53944128-208" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="img-format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-format</stringProp>
                  <stringProp name="Argument.value">auto</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="img-1-resize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-1-resize</stringProp>
                  <stringProp name="Argument.value">width:315,height:300,fit:cover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="img-2-filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">img-2-filter</stringProp>
                  <stringProp name="Argument.value">sharpen</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">news.store.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/img/bafd1d4555516f482f62561e53944128</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/metrics/-216" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;init_render_app&quot;,&quot;value&quot;:41,&quot;type&quot;:&quot;histogram&quot;,&quot;prefix&quot;:&quot;perf&quot;},{&quot;name&quot;:&quot;react_init.new_dd2&quot;,&quot;value&quot;:1,&quot;type&quot;:&quot;counter&quot;,&quot;prefix&quot;:&quot;&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/metrics/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/view/628070045/-231" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">eP1QiPQeBYC3a*anEuX1s5M9kuWYWVuOhBNWLKwqGEXrfVn3*lnABxZhSWixgBDaGAlieJRAfMHe4-FtWVEYnzmq5e1kmiNStHwZGGAX0cOp*rUt3mF3cVf4Qcz-4Xu5*qOSATxlKRbg5OgYnqSBvrjesaQvvopEmBSBn2eiRms5k3OUBoT31s6aq7FO9dHDcFQZFG64qUyEoWEekfprQMg8FpFfJwY7I95H5HfiQJvYTyBqgGUps53uF1SMXsZVqxEvYcO7acq-f6ZWRm9kyba-6H5zYo-hV2BZ*xjVael-hsRXFmmRxsfEiUqMGDCR3zcD4fpRpRq20LgrwQC4w-5xWm-3L4khJmXHN6SwkmNuMngAJwoAZIrTAOVR1rNkKIFpU4vQdXIa9h-i6kwzbg9qkXTV1JqPB*QfLkO*M5S6mBTtcDjK6QIRjgfDz7oljtJ6V6Rw-DtypvcVbbu9ROPP2zLfaHIdc3vofId2p*a7*Nbg**IiYJgy8050Nd*3ZZLyp6y4f*akij*hNoxKOQAfTEIwygysuEE4rOuAmdn9oTVt4snJqfnpaa8Qsf45RjQbfLZMesibfVmnmEqrit8stkeIfoojLPOqD5WBJ*owLVULfP**1mrhhS9pBizkE2Xxcvq8*aQo8Ni7Kop8Ww*MloDDGP3BEk10Uvvl1APnT4h04arfzi6MwXC5JXLtS2LgCVafEMmqSSTwmiBI1dYvbqbenAuC5-UnvA3DdKwOBlUHqd9WcpEGucc7mzk2MHQDY4XGKBolAmf37YfHJtYAq-FdZVSbqWON27hdyovKPnrTDzDPXg5ar73mP9VO2w3QJCrLlztw70BsO1-lDBTw7fZdzjwyEgF1x9*O1XEdFgyErLZFsic2DzdGWfJRhuLTVJE71bgjRxqhB3kEhElPntXAGlc6VD7tgfzJT*MjkxzO4HiZiWZb0RvmLEoN7g4GlcAxQHMQBj48sg7tt2GPbtZH-dMtBApIVK1jRVpUFIX*ojG*Xfo1fXf2wV60bhpBHFT-nJ25EYaVJk7abKS2kTaPL4qk5OXgtOf2u-aSIIFKX*A1mfaLPnGmwJkcwouNpJME4CPmig1K1hHS*RPAyCAnummssmItEDiuSWig54Sff6hTUnXtQS0zmFmWlPNDzV1L15G8pKJIHpc*ViGKU5HIlM7ZvCmWDqOWSyPrn4ej-G9oopJq*dGy*DPI3IDEOwzXap5oOQuFgefr9QzyksVixpMjzNiG6U44mtN-NlP4S9qhuyAQaOQGQffzR2idsJ8nrP44JfpgDEwSVcdywy62af57i58hqi5GzrJJTHIe6wzzxXHX5UaZFg3E9LlWqPyh8Yh1K-PwrvSzFHdLkc1om4Rn7IFUTWjX9tZI95zQ8T4VjMYylEGvri*BpvGEnYVJKPkyIf-JvZqqptK5iLDFdu8G6G7UPAd8ZLYPkG6LwXTImjQZPCL4*uR54bJzY6raejQhdZR31E1heOGC6014a0xKXmLmi57ZPDlcTLmDFA7NSv1cX5*3kXuoKva8Lu-FmqZK36xjwp3hbZd8Wqgj7oPJ9XVAvNHqpekBl9C*7gS5pwSGEMlnhrN5b9YopjzlIdTKs63qyKeg9FHbRkABA62ej7GIocBZQvIBu0ePbHJMwbppBk-ios*JVhjYIvUfZg2i3O8vZt8lohklKTLWzg5uZcI6WUFp*7hOEbCpTjnqJVHe-KXTVl1GaExDISQjkXFmQwRL7SeHs9MK7y8Ps54XdgYiq5Oty7MCAAAAuty8CgAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">dsp-rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/view/628070045/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/search-198" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="utm_source" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">utm_source</stringProp>
                  <stringProp name="Argument.value">head</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="utm_campaign" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">utm_campaign</stringProp>
                  <stringProp name="Argument.value">self_promo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="utm_medium" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">utm_medium</stringProp>
                  <stringProp name="Argument.value">form</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="utm_content" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">utm_content</stringProp>
                  <stringProp name="Argument.value">search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">${query}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">nova.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://www.rambler.ru/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UC-0/-212" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">www.rambler.ru</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Prefer" elementType="Header">
                  <stringProp name="Header.name">Prefer</stringProp>
                  <stringProp name="Header.value">safe</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36 Edg/89.0.774.57</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
